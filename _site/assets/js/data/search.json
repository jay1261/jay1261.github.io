[
  
  {
    "title": "SQL Grammer (Replace, Substring, Concat)",
    "url": "/posts/SQL-Grammer-(Replace,-Substring,-Concat)/",
    "categories": "MySQL, SQL Grammer",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-03-12 00:00:00 +0900",
    





    
    "snippet": "SQL Grammer (Replace, Substring, Concat)Replace특정 문자를 변경하고자 할 때 사용합니다. Replace(바꿀컬럼, 현재 값, 바꿀 값) 의 형태로 사용할 수 있습니다.ex)SELECT restaurant_name AS \"원래 이름\",         REPLACE (restaurant_name, 'Blue', 'Pi...",
    "content": "SQL Grammer (Replace, Substring, Concat)Replace특정 문자를 변경하고자 할 때 사용합니다. Replace(바꿀컬럼, 현재 값, 바꿀 값) 의 형태로 사용할 수 있습니다.ex)SELECT restaurant_name AS \"원래 이름\",         REPLACE (restaurant_name, 'Blue', 'Pink')  FROM food_orders  WHERE restaurant_name LIKE '%Blue Ribbon%'이렇게 하면 기존에 ‘Blue’ 였던 문자가 Pink로 바뀌게 됩니다.            원래이름      바뀐이름              Blue Ribbon Sushi Izakaya      Pink Ribbon Sushi Izakaya              Blue Ribbon Fried Chicken      Pink Ribbon Fried Chicken              Blue Ribbon Fried Chicken      Pink Ribbon Fried Chicken              Blue Ribbon Sushi Izakaya      Pink Ribbon Sushi Izakaya              Blue Ribbon Sushi      Pink Ribbon Sushi              Blue Ribbon Sushi      Pink Ribbon Sushi      Substring특정 문자만 골라서 조회할 수 있는 문법입니다. substr(조회할 컬럼, 시작 위치, 글자 수)의 형태로 사용 가능합니다. 전체 주소에서 앞의 두글자만 추출하고 싶을 때 쓸 수 있습니다 (“서울특별시”에서 “서울”만 추출). 글자 수를 입력하지 않으면 시작위치에서 끝까지 출력됩니다.SELECT addr as \"원래주소\",SUBSTR(addr, 1,2) FROM food_orders            서울특별시 종로구 팔판      서울              경기도 광주시 퇴촌면      경기              경기도 용인시 처인구 양지면 식금리      경기              경기도 인천시 간석동      경기              경기도 평택군 고덕면 문곡리      경기      Concat여러 컬럼에 나눠져있는 문자를 합쳐야할 때 사용할 수 있는 문법입니다. concat(붙이고 싶은 값1, 붙이고 싶은 값2, ...) 의 형태로 사용 가능합니다. “서울특별시”, “음식점” 형태의 값을 [서울] 음식점명으로 변경하고 싶을 때 사용할 수 있습니다.SELECT restaurant_name as \"원래이름\",         CONCAT('[', SUBSTR(addr,1,2), '] ', restaurant_name)  FROM  food_orders  WHERE addr like '%서울%';            Hangawi      [서울] Hangawi              Barbounia      [서울] Barbounia              Empanada Mama (closed)      [서울] Empanada Mama (closed)              The Meatball Shop      [서울] The Meatball Shop              Blue Ribbon Sushi      [서울] Blue Ribbon Sushi              The Meatball Shop      [서울] The Meatball Shop      연습문제  [지역(시도)] 음식점이름(음식종류) 컬럼을 만들고, 총 주문건수 구하기SELECT concat('[' , substr(addr,1,2) ,'] ', restaurant_name, '(', cuisine_type, ')') as \"음식점 상세\",         count(1) as \"총 주문건수\"  from food_orders  group by restaurant_name;  출력 결과            [서울] Hangawi(Korean)      2              [경기] Blue Ribbon Sushi Izakaya(Japanese)      29              [경기] Cafe Habana(Mexican)      16              [경기] Blue Ribbon Fried Chicken(American)      96              [경기] Dirty Bird to Go(American)      4              [경기] Tamarind TriBeCa(Indian)      27              …      …      "
  },
  
  {
    "title": "SQL Grammer (If, Case, Cast)",
    "url": "/posts/SQL-Grammer-(If,-Case,-Cast)/",
    "categories": "MySQL, SQL Grammer",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-03-12 00:00:00 +0900",
    





    
    "snippet": "SQL Grammer (If, Case, Cast)If조건에 따라 다른 방법을 적용해 값을 얻고 싶을 때 If문을 사용합니다. if(조건, 참일 때 실행, 거짓일 때 실\u001c행)의 형태로 사용합니다. 음식의 타입이 “Korean”이면 한식, 아니면 기타를 출력하는 예시입니다.select restaurant_name,         cuisine_type ...",
    "content": "SQL Grammer (If, Case, Cast)If조건에 따라 다른 방법을 적용해 값을 얻고 싶을 때 If문을 사용합니다. if(조건, 참일 때 실행, 거짓일 때 실\u001c행)의 형태로 사용합니다. 음식의 타입이 “Korean”이면 한식, 아니면 기타를 출력하는 예시입니다.select restaurant_name,         cuisine_type \"원래 음식 타입\",         if(cuisine_type='Korean', '한식', '기타') \"음식 타입\"  from food_orders;            Hangawi      Korean      한식              Blue Ribbon Sushi Izakaya      Japanese      기타              Cafe Habana      Mexican      기타              Blue Ribbon Fried Chicken      American      기타              Dirty Bird to Go      American      기타      Case조건을 지정하다보면 두개 이상의 조건을 지정해야 할 경우가 있는데, 이러한 때에는 case문이 더 효율적입니다.case when '조건1' then '값1'     when '조건2' then '값2'      ...     else '값3'end의 형태로 사용할 수 있습니다.ex) 10세 이상 30세 미만의 고의 나이와 성로 그룹 나누기(이름도 같이 출력)select case when age between 10 and 19 and gender='male' then '10대 남성'              when age between 10 and 19 and gender='female' then '10대 여성'              when age between 20 and 29 and gender='male' then '20대 남성'              when age between 20 and 29 and gender='female' then '20대 여성'              end as \"고객 분류\",              name, age, gender  from customers  where age between 10 and 29;            고객 분류      name      age      gender              10대 남성      김도진      15      male              10대 여성      정지은      15      female              20대 남성      김하호      21      male              10대 여성      이채원      16      female              10대 여성      박민연      12      female      CastType에 관련한 문제가 발생했을 때 데이터베이스의 값의 타입을 변경해 줄 수 있는 문법입니다.문자 -&gt; 숫자 or 숫자 -&gt; 문자 등cast(컬럼 as 타입)의 형태로 사용가능합니다."
  },
  
  {
    "title": "SQL Grammer (Group By, Order By)",
    "url": "/posts/SQL-Grammer-(Group-By,-Order-By)/",
    "categories": "MySQL, SQL Grammer",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-03-12 00:00:00 +0900",
    





    
    "snippet": "SQL Grammer (Group By, Order By)Group By데이터를 범주별로 연산된 결과를 얻고 싶을 때 주로 사용합니다. Count, AVG, Sum등의 함수들과 주로 같이 사용되며, 예를들어 나라별 음식 판매의 합산 금액을 구하고 싶을때 사용할 수 있습니다.ex)select cuisine_type,       sum(price) sum...",
    "content": "SQL Grammer (Group By, Order By)Group By데이터를 범주별로 연산된 결과를 얻고 싶을 때 주로 사용합니다. Count, AVG, Sum등의 함수들과 주로 같이 사용되며, 예를들어 나라별 음식 판매의 합산 금액을 구하고 싶을때 사용할 수 있습니다.ex)select cuisine_type,       sum(price) sum_of_pricefrom food_ordersgroup by cuisine_type  출력            cuisine_type      sum_of_price                  Korean      182020              Japanese      7663130              Mexican      1303850              American      9530780      Order By지정한 칼럼을 기준으로 정렬된 값을 얻고 싶을 때 사용하는 문법입니다. 기본 오름차순으로 정렬되며 desc를 사용하면 내림차순으로 정렬할 수 있습니다. Group by의 예시의 바로 아래에 order by sum(price)를 입력해줌으로써 합산된 가격의 오름차순으로 정렬된 값을 얻을 수 있습니다. 내림차순은 order by sum(price) desc를 입력해주면 됩니다.ex)select cuisine_type,       sum(price) sum_of_pricefrom food_ordersgroup by cuisine_typeorder by sum(price)   출력            cuisine_type      sum_of_price                  Vietnamese      90180              Korean      182020              Spanish      227930              Southern      328110              French      356290      "
  },
  
  {
    "title": "SQL Grammer (Where, Between, In, Like)",
    "url": "/posts/SQL-Grammer-(Where,-Between,-In,-Like)/",
    "categories": "MySQL, SQL Grammer",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-03-11 00:00:00 +0900",
    





    
    "snippet": "SQL Grammer (Where, Between, In, Like)Where데이터 중에 특정 조건으로 필터링을 해야할 때 사용하는 문법입니다. “나이가 20살 이상인 사람”과 같은 경우의 데이터를 구할 때 사용합니다.ex)SELECT * FROM customer WHERE age&gt;=20Where를 사용할 때 기본적인 비교 연산자로는 =, &lt...",
    "content": "SQL Grammer (Where, Between, In, Like)Where데이터 중에 특정 조건으로 필터링을 해야할 때 사용하는 문법입니다. “나이가 20살 이상인 사람”과 같은 경우의 데이터를 구할 때 사용합니다.ex)SELECT * FROM customer WHERE age&gt;=20Where를 사용할 때 기본적인 비교 연산자로는 =, &lt;&gt;, &lt;, &lt;=, &gt;, &gt;=이 있습니다            연산자      \u001d의미                  =      \b같다              &lt;&gt;      같지않다              &gt;      크다              &gt;=      크거나 같다              &lt;      작다              &lt;=      작거나 같다      Betweena와 b값의 사이에 있는 값을 가져올 때 사용합니다. a와 b 사이에 AND를 사용해 줍니다.ex)SELECT * FROM customer WHERE age BETWEEN 20 and 30In포함하는 조건을 줄 때 사용합니다. “나이가(20, 21, 27)살인 사람”을 필터링할 때 사용합니다.SELECT * FROM customer WHERE age IN(20, 21, 27)Like완전히 똑같지는 않지만 비슷한 값을 찾을 때 사용할 수 있습니다. 예를들어 이름이 ‘OO현’인 사람을 \b찾을때 사용할 수 있습니다. Like연산자와 %, _가 같이 사용되는데, 이 문자들을 WildCard라고 합니다. %는 0,1 또는 하나 이상의 character를 나타냅니다. _는 하나의 character를 나타냅니다.SELECT * FROM customer WHERE name LIKE \"%현\"SELECT * FROM customer WHERE name LIKE \"_현_\"결과를 출력해보면  김예현, 이동현…  김현재, 이현호…가 될 수 있습니다."
  },
  
  {
    "title": "SQL Grammer (Select, From)",
    "url": "/posts/SQL-Grammer-(Select,-From)/",
    "categories": "MySQL, SQL Grammer",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-03-11 00:00:00 +0900",
    





    
    "snippet": "SQL Grammer (Select, From)SQL 이란?SQL은 Structured Query Language의 약자이며 직역하자면 구조화된 질의 언어 라는 의미입니다. 관계형 데이터베이스에서 데이터를 관리하고 처리하기 위해 사용되는 비절차적인 언어입니다.SQL 문장에는 다음 3가지 종류가 있습니다.  데이터 정의어(Data Definition L...",
    "content": "SQL Grammer (Select, From)SQL 이란?SQL은 Structured Query Language의 약자이며 직역하자면 구조화된 질의 언어 라는 의미입니다. 관계형 데이터베이스에서 데이터를 관리하고 처리하기 위해 사용되는 비절차적인 언어입니다.SQL 문장에는 다음 3가지 종류가 있습니다.  데이터 정의어(Data Definition Language)  데이터 조작어(Data Manipulation Language)  데이터 제어어(Data Control Language)SelectSelect는 SQL에서 가장 많이 사용되는 구문입니다. 데이터를 가져오는 기본 명령어로, 데이터를 조회하는 모든 Query에 사용됩니다. 단순하게 데이터베이스가 엑셀처럼 행과 열(row) 열(column)이 있다고 했을 때, 열(column)을 선택한다고 생각할 수 있습니다.#모든 열을 선택SELECT * FromFrom은 데이터베이스 안에서 데이터를 가져올 테이블을 특정해주는 문법입니다.SELECT * FROM customer  이에 따라 위의 sql문을 해석하면, 현재 데이터베이스의 customer 테이블의 모든 열을 가져오는 코드가 됩니다.  출력 예시            customer_id      name      email                  337525      조현아      xzvnliwj@hanmail.com              358141      장민호      byuvhegb@hanmail.com              66393      김도진      dzelcyxr@daum.net      "
  },
  
  {
    "title": "SQL Grammer (SUM, AVG, COUNT, MIN, MAX)",
    "url": "/posts/SQL-Grammer-(SUM,-AVG,-COUNT,-MIN,-MAX)/",
    "categories": "MySQL, SQL Grammer",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-03-11 00:00:00 +0900",
    





    
    "snippet": "SQL Grammer (SUM, AVG, COUNT, MIN, MAX)SUM선택된 열과 범위의 합계를 반환해줍니다. 예시처럼 customer의 테이블안에 있는 모든 값들의 나이를 더한 값을 얻고 싶을 때 쓸 수 있습니다.ex)SELECT SUM(age) FROM customersAVGsum과 같은 방법으로 사용 가능하며, 평균 값을 구할 때 사용합니다...",
    "content": "SQL Grammer (SUM, AVG, COUNT, MIN, MAX)SUM선택된 열과 범위의 합계를 반환해줍니다. 예시처럼 customer의 테이블안에 있는 모든 값들의 나이를 더한 값을 얻고 싶을 때 쓸 수 있습니다.ex)SELECT SUM(age) FROM customersAVGsum과 같은 방법으로 사용 가능하며, 평균 값을 구할 때 사용합니다. customer 테이블 안의 age의 평균값을 구하고 싶다면 다음과 같이 사용할 수 있습니다.SELECT AVG(age) FROM customersCOUNT데이터의 개수를 구하는데 사용할 수 있습니다. ()안에 1이나 *을 입력하면 해당 테이블의 전체 카운트를 가져옵니다. distinct를 사용하면 중복되지 않는 값을 반환합니다. 예시를 보면 customer_id가 중복되지 않는 값을 반환합니다.SELECT COUNT(1) FROM customersSELECT COUNT(*) FROM customersSELECT COUNT(*),COUNT(DISTINCT customer_id) FROM food_ordersMIN선택된 범위 내에서 최소값을 가져오는 문법입니다. “나이가 가장 어린사람”을 찾고 싶을 때 사용 가능합니다.SELECT MIN(age) FROM customersMAX선택된 범위 내에서 최대값을 가져오는 문법입니다. “나이가 가장 많은사람”을 찾고 싶을 때 사용 가능합니다.SELECT MAX(age) FROM customers"
  },
  
  {
    "title": "Basic70 수열과 구간 쿼리 1",
    "url": "/posts/ProgrammersBasic-70/",
    "categories": "Algorithm, Programmers, Basic",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-02-07 00:00:00 +0900",
    





    
    "snippet": "문제: 수열과 구간 쿼리 1문제: 수열과 구간 쿼리 1문제 설명정수 배열 arr와 2차원 정수 배열 queries이 주어집니다. queries의 원소는 각각 하나의 query를 나타내며, [s, e] 꼴입니다.각 query마다 순서대로 s ≤ i ≤ e인 모든 i에 대해 arr[i]에 1을 더합니다.위 규칙에 따라 queries를 처리한 이후의 arr...",
    "content": "문제: 수열과 구간 쿼리 1문제: 수열과 구간 쿼리 1문제 설명정수 배열 arr와 2차원 정수 배열 queries이 주어집니다. queries의 원소는 각각 하나의 query를 나타내며, [s, e] 꼴입니다.각 query마다 순서대로 s ≤ i ≤ e인 모든 i에 대해 arr[i]에 1을 더합니다.위 규칙에 따라 queries를 처리한 이후의 arr를 return 하는 solution 함수를 완성해 주세요.제한사항  1 ≤ arr의 길이 ≤ 1,000          0 ≤ arr의 원소 ≤ 1,000,000        1 ≤ queries의 길이 ≤ 1,000          0 ≤ s ≤ e &lt; arr의 길이      입출력 예            arr      queries      result                  [0, 1, 2, 3, 4]      [[0, 1],[1, 2],[2, 3]]      [1, 3, 4, 4, 4]      입출력 예 설명입출력 예 #1  각 쿼리에 따라 arr가 다음과 같이 변합니다.            i      queries[i]      arr                  -      -      [0, 1, 2, 3, 4]              0      [0,1]      [1, 2, 2, 3, 4]              1      [1,2]      [1, 3, 3, 3, 4]              2      [2,3]      [1, 3, 4, 4, 4]        따라서 [1, 3, 4, 4, 4]를 return 합니다.Solution  먼저 queries.reduce(into: arr)을 사용해서 arr을 reduce의 초기값으로 넣어주었습니다.queries.reduce(into: arr){ result, q in }  그런 다음 arr.indices.filter를 사용해서 index의 값이 queries의 범위에 있는 index들을 뽑아낸 다음 그에 해당하는 요소에 += 1를 해주는 방법으로 문제를 풀었습니다.import Foundationfunc solution(_ arr:[Int], _ queries:[[Int]]) -&gt; [Int] {    return queries.reduce(into: arr){ result, q in        arr.indices.filter{$0 &gt;= q[0] &amp;&amp; $0 &lt;= q[1]}.map{result[$0] += 1}    }}"
  },
  
  {
    "title": "Basic69 n 보다 커질 때까지 더하기",
    "url": "/posts/ProgrammersBasic-69/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-02-07 00:00:00 +0900",
    





    
    "snippet": "문제: n 보다 커질 때까지 더하기문제 설명정수 배열 numbers와 정수 n이 매개변수로 주어집니다. numbers의 원소를 앞에서부터 하나씩 더하다가 그 합이 n보다 커지는 순간 이때까지 더했던 원소들의 합을 return 하는 solution 함수를 작성해 주세요.제한사항  1 ≤ numbers의 길이 ≤ 100  1 ≤ numbers의 원소 ≤ ...",
    "content": "문제: n 보다 커질 때까지 더하기문제 설명정수 배열 numbers와 정수 n이 매개변수로 주어집니다. numbers의 원소를 앞에서부터 하나씩 더하다가 그 합이 n보다 커지는 순간 이때까지 더했던 원소들의 합을 return 하는 solution 함수를 작성해 주세요.제한사항  1 ≤ numbers의 길이 ≤ 100  1 ≤ numbers의 원소 ≤ 100  0 ≤ n &lt; numbers의 모든 원소의 합입출력 예            numbers      n      result                  [34, 5, 71, 29, 100, 34]      123      139              [58, 44, 27, 10, 100]      139      239      입출력 예 설명입출력 예 #1      예제 1번의 numbers를 문제 설명대로 더해가는 과정을 나타내면 다음의 표와 같습니다.                            i          numbers[i]          sum                                                            0                          0          34          34                          1          5          39                          2          71          110                          3          29          139                      29를 더한 뒤에 sum 값은 139이고 n 값인 123보다 크므로 139를 return 합니다.        예제 2번의 numbers의 마지막 원소 전까지의 원소를 sum에 더하면 139입니다. 139는 n 값인 139보다 크지 않고 마지막 원소인 100을 더하면 139보다 커지므로 239를 return 합니다.  Solution  주어진 조건에 맞춰서 while문을 통해 numbers의 값들을 더하다가 reuslt가 n보다 커지는 순간 break를 통해서 result를 반환하는 방식으로 문제를 풀었습니다.import Foundationfunc solution(_ numbers:[Int], _ n:Int) -&gt; Int {    var result = 0    var index = 0    while true {\t    if result &gt; n {            break        }        result += numbers[index]        index += 1    }    return result}  이를 짧게 reduce를 활용해서, 처음 주어진 $0의 값이 n보다 작으면 $0 + $1을 해줌으로써 값을 더해주고, $0 &gt; n이 되면 $0을 더이상 더해주지 않는 방법으로도 문제를 풀어봤습니다.    return numbers.reduce(0){$0 &gt; n ? $0 : $0 + $1}"
  },
  
  {
    "title": "Basic68 할 일 목록",
    "url": "/posts/ProgrammersBasic-68/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-02-07 00:00:00 +0900",
    





    
    "snippet": "문제: 할 일 목록문제 설명오늘 해야 할 일이 담긴 문자열 배열 todo_list와 각각의 일을 지금 마쳤는지를 나타내는 boolean 배열 finished가 매개변수로 주어질 때, todo_list에서 아직 마치지 못한 일들을 순서대로 담은 문자열 배열을 return 하는 solution 함수를 작성해 주세요.제한사항  1 ≤ todo_list의 길...",
    "content": "문제: 할 일 목록문제 설명오늘 해야 할 일이 담긴 문자열 배열 todo_list와 각각의 일을 지금 마쳤는지를 나타내는 boolean 배열 finished가 매개변수로 주어질 때, todo_list에서 아직 마치지 못한 일들을 순서대로 담은 문자열 배열을 return 하는 solution 함수를 작성해 주세요.제한사항  1 ≤ todo_list의 길이 1 ≤ 100  2 ≤ todo_list의 원소의 길이 ≤ 20          todo_list의 원소는 영소문자로만 이루어져 있습니다.      todo_list의 원소는 모두 서로 다릅니다.        finished[i]는 true 또는 false이고 true는 todo_list[i]를 마쳤음을, false는 아직 마치지 못했음을 나타냅니다.  아직 마치지 못한 일이 적어도 하나 있습니다.입출력 예            todo_list      finished      result                  [“problemsolving”, “practiceguitar”, “swim”, “studygraph”]      [true, false, true, false]      [“practiceguitar”, “studygraph”]      입출력 예 설명입출력 예 #1  예제 1번의 todo_list 중에서 “problemsolving”과 “swim”은 마쳤고, “practiceguitar”와 “studygraph”는 아직 마치지 못했으므로 todo_list에서 나온 순서대로 담은 문자열 배열 [“practiceguitar”, “studygraph”]를 return 합니다.Solution  todo_list와 finished가 같은 index 값을 갖기 때문에, enumerated()를 이용해서 finished 중 값이 false인 요소들을 뽑아낸 후에, 그 인덱스를 활용해 todo_list의 남은 할 일 들을 담은 배열을 만들었습니다.import Foundationfunc solution(_ todo_list:[String], _ finished:[Bool]) -&gt; [String] {    return finished.enumerated().filter{$0.element == false}.map{ todo_list[$0.offset] }}"
  },
  
  {
    "title": "Basic67 5명씩",
    "url": "/posts/ProgrammersBasic-67/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-02-07 00:00:00 +0900",
    





    
    "snippet": "문제: 5명씩문제 설명최대 5명씩 탑승가능한 놀이기구를 타기 위해 줄을 서있는 사람들의 이름이 담긴 문자열 리스트 names가 주어질 때, 앞에서 부터 5명씩 묶은 그룹의 가장 앞에 서있는 사람들의 이름을 담은 리스트를 return하도록 solution 함수를 완성해주세요. 마지막 그룹이 5명이 되지 않더라도 가장 앞에 있는 사람의 이름을 포함합니다....",
    "content": "문제: 5명씩문제 설명최대 5명씩 탑승가능한 놀이기구를 타기 위해 줄을 서있는 사람들의 이름이 담긴 문자열 리스트 names가 주어질 때, 앞에서 부터 5명씩 묶은 그룹의 가장 앞에 서있는 사람들의 이름을 담은 리스트를 return하도록 solution 함수를 완성해주세요. 마지막 그룹이 5명이 되지 않더라도 가장 앞에 있는 사람의 이름을 포함합니다.제한사항  5 ≤ names의 길이 ≤ 30  1 ≤ names의 원소의 길이 ≤ 10  names의 원소는 영어 알파벳 소문자로만 이루어져 있습니다.입출력 예            names      result                  [“nami”, “ahri”, “jayce”, “garen”, “ivern”, “vex”, “jinx”]      [“nami”, “vex”]      입출력 예 설명입출력 예 #1  앞에서부터 5명씩 두 그룹으로 묶을 수 있습니다. [“nami”, “ahri”, “jayce”, “garen”, “ivern”], [“vex”, “jinx”] 이 두 그룹에서 가장 앞에 서있는 사람들의 이름을 담은 리스트인 [“nami”, “vex”]를 return합니다.Solution  indices.filter와 % 연산자를 사용해서 각각 그룹의 제일 앞사람의 인덱스 값을 뽑아서 map으로 이름을 배열에 담아 return 했습니다.import Foundationfunc solution(_ names:[String]) -&gt; [String] {    return names.indices.filter{$0 % 5 == 0}.map{names[$0]}}"
  },
  
  {
    "title": "Basic66 홀수 vs 짝수",
    "url": "/posts/ProgrammersBasic-66/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-02-07 00:00:00 +0900",
    





    
    "snippet": "문제: 홀수 vs 짝수문제 설명정수 리스트 num_list가 주어집니다. 가장 첫 번째 원소를 1번 원소라고 할 때, 홀수 번째 원소들의 합과 짝수 번째 원소들의 합 중 큰 값을 return 하도록 solution 함수를 완성해주세요. 두 값이 같을 경우 그 값을 return합니다.제한사항  5 ≤ num_list의 길이 ≤ 50  -9 ≤ num_l...",
    "content": "문제: 홀수 vs 짝수문제 설명정수 리스트 num_list가 주어집니다. 가장 첫 번째 원소를 1번 원소라고 할 때, 홀수 번째 원소들의 합과 짝수 번째 원소들의 합 중 큰 값을 return 하도록 solution 함수를 완성해주세요. 두 값이 같을 경우 그 값을 return합니다.제한사항  5 ≤ num_list의 길이 ≤ 50  -9 ≤ num_list의 원소 ≤ 9입출력 예            num_list      result                  [4, 2, 6, 1, 7, 6]      17              [-1, 2, 5, 6, 3]      8      입출력 예 설명입출력 예 #1  홀수 번째 원소들의 합은 4 + 6 + 7 = 17, 짝수 번째 원소들의 합은 2 + 1 + 6 = 9 이므로 17을 return합니다.입출력 예 #2  홀수 번째 원소들의 합은 -1 + 5 + 3 = 7, 짝수 번째 원소들의 합은 2 + 6 = 8 이므로 8을 return합니다.※2023년 04월 24일 테스트 케이스가 추가되었습니다. 기존에 제출한 코드가 통과하지 못할 수 있습니다.Solution  홀수 번째 원소들을 indices.filter를 통해 구하고, 그 합을 reduce를 사용해 구합니다. 짝수도 같은 방법으로 구현합니다.num_list.indices.filter{$0 % 2 == 0}.reduce(0){$0 + num_list[$1]}num_list.indices.filter{$0 % 2 != 0}.reduce(0){$0 + num_list[$1]}  max 함수를 이용해서 둘 중 큰값을 return 합니다.import Foundationfunc solution(_ num_list:[Int]) -&gt; Int {    return max(num_list.indices.filter{$0 % 2 == 0}.reduce(0){$0 + num_list[$1]}, num_list.indices.filter{$0 % 2 != 0}.reduce(0){$0 + num_list[$1]})}"
  },
  
  {
    "title": "Basic65 n개 간격의 원소들",
    "url": "/posts/ProgrammersBasic-65/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-02-06 00:00:00 +0900",
    





    
    "snippet": "문제: n개 간격의 원소들문제 설명정수 리스트 num_list와 정수 n이 주어질 때, num_list의 첫 번째 원소부터 마지막 원소까지 n개 간격으로 저장되어있는 원소들을 차례로 담은 리스트를 return하도록 solution 함수를 완성해주세요.제한사항  5 ≤ num_list의 길이 ≤ 20  1 ≤ num_list의 원소 ≤ 9  1 ≤ n ...",
    "content": "문제: n개 간격의 원소들문제 설명정수 리스트 num_list와 정수 n이 주어질 때, num_list의 첫 번째 원소부터 마지막 원소까지 n개 간격으로 저장되어있는 원소들을 차례로 담은 리스트를 return하도록 solution 함수를 완성해주세요.제한사항  5 ≤ num_list의 길이 ≤ 20  1 ≤ num_list의 원소 ≤ 9  1 ≤ n ≤ 4입출력 예            num_list      n      result                  [4, 2, 6, 1, 7, 6]      2      [4, 6, 7]              [4, 2, 6, 1, 7, 6]      4      [4, 7]      입출력 예 설명입출력 예 #1  [4, 2, 6, 1, 7, 6]에서 2개 간격으로 저장되어 있는 원소들은 [4, 6, 7]입니다.입출력 예 #2  [4, 2, 6, 1, 7, 6]에서 4개 간격으로 저장되어 있는 원소들은 [4, 7]입니다.Solution  filter와 % 연산자를 사용해서 n개의 간격으로 원소를 걸러내는 코드를 구현했습니다.import Foundationfunc solution(_ num_list:[Int], _ n:Int) -&gt; [Int] {    return num_list.enumerated().filter{$0.offset % n == 0}.map{$0.element}}  다른 방법으로는 stride를 이용해서 n개의 간격으로 원소를 담는 코드를 구현할 수 있습니다.import Foundationfunc solution(_ num_list:[Int], _ n:Int) -&gt; [Int] {    return stride(from:0 , to: num_list.count, by: n).map{num_list[$0]}}"
  },
  
  {
    "title": "Basic64 n 번째 원소까지",
    "url": "/posts/ProgrammersBasic-64/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-02-06 00:00:00 +0900",
    





    
    "snippet": "문제: n 번째 원소까지문제 설명정수 리스트 num_list와 정수 n이 주어질 때, num_list의 첫 번째 원소부터 n 번째 원소까지의 모든 원소를 담은 리스트를 return하도록 solution 함수를 완성해주세요.제한사항  2 ≤ num_list의 길이 ≤ 30  1 ≤ num_list의 원소 ≤ 9  1 ≤ n ≤ num_list의 길이 _...",
    "content": "문제: n 번째 원소까지문제 설명정수 리스트 num_list와 정수 n이 주어질 때, num_list의 첫 번째 원소부터 n 번째 원소까지의 모든 원소를 담은 리스트를 return하도록 solution 함수를 완성해주세요.제한사항  2 ≤ num_list의 길이 ≤ 30  1 ≤ num_list의 원소 ≤ 9  1 ≤ n ≤ num_list의 길이 ___입출력 예            num_list      n      result                  [2, 1, 6]      1      [2]              [5, 2, 1, 7, 5]      3      [5, 2, 1]      입출력 예 설명입출력 예 #1  [2, 1, 6]의 첫 번째 원소부터 첫 번째 원소까지의 모든 원소는 [2]입니다.입출력 예 #2  [5, 2, 1, 7, 5]의 첫 번째 원소부터 세 번째 원소까지의 모든 원소는 [5, 2, 1]입니다.Solution  [0..&lt;n]을 사용해서 배열의 구간을 나누어 문제를 풀었습니다.`참고: num_list[0..&lt;n]의 반환타입은 ‘ArraySlice'이므로 map을 사용해 [Int] 타입으로 변환해주어야 합니다.import Foundationfunc solution(_ num_list:[Int], _ n:Int) -&gt; [Int] {    return num_list[0..&lt;n].map{$0}}"
  },
  
  {
    "title": "Basic63 왼쪽 오른쪽",
    "url": "/posts/ProgrammersBasic-63/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-02-06 00:00:00 +0900",
    





    
    "snippet": "문제: 왼쪽 오른쪽문제 설명문자열 리스트 str_list에는 “u”, “d”, “l”, “r” 네 개의 문자열이 여러 개 저장되어 있습니다. str_list에서 “l”과 “r” 중 먼저 나오는 문자열이 “l”이라면 해당 문자열을 기준으로 왼쪽에 있는 문자열들을 순서대로 담은 리스트를, 먼저 나오는 문자열이 “r”이라면 해당 문자열을 기준으로 오른쪽에 ...",
    "content": "문제: 왼쪽 오른쪽문제 설명문자열 리스트 str_list에는 “u”, “d”, “l”, “r” 네 개의 문자열이 여러 개 저장되어 있습니다. str_list에서 “l”과 “r” 중 먼저 나오는 문자열이 “l”이라면 해당 문자열을 기준으로 왼쪽에 있는 문자열들을 순서대로 담은 리스트를, 먼저 나오는 문자열이 “r”이라면 해당 문자열을 기준으로 오른쪽에 있는 문자열들을 순서대로 담은 리스트를 return하도록 solution 함수를 완성해주세요. “l”이나 “r”이 없다면 빈 리스트를 return합니다.제한사항  1 ≤ str_list의 길이 ≤ 20  str_list는 “u”, “d”, “l”, “r” 네 개의 문자열로 이루어져 있습니다.입출력 예            str_list      result                  [“u”, “u”, “l”, “r”]      [“u”, “u”]              [“l”]      []      입출력 예 설명입출력 예 #1  “r”보다 “l”이 먼저 나왔기 때문에 “l”의 왼쪽에 있는 문자열들을 담은 리스트인 [“u”, “u”]를 return합니다.입출력 예 #2  “l”의 왼쪽에 문자열이 없기 때문에 빈 리스트를 return합니다.Solution  왼쪽, 오른쪽의 기준이 될 값을 찾기 위해서 filter를 사용해 값이 r, l 인 요소들을 걸러낸 후 그 중 첫 번째 값을 piviot 변수에 저장했습니다. if let을 이용해서 만약 값이 없을 경우는 빈 리스트를 리턴하도록 했습니다.if let pivot = str_list.enumerated().filter{$0.element == \"r\" || $0.element == \"l\"}.first{}else {\t  return []}  이후에는 pivot의 값이 l 인지 r 인지에 따라서 문제의 요구사항 대로 리스트를 만들어 return해주는 코드를 작성했습니다.import Foundationfunc solution(_ str_list:[String]) -&gt; [String] {    if let pivot = str_list.enumerated().filter{$0.element == \"r\" || $0.element == \"l\"}.first {        return pivot.element == \"l\" ? str_list[0..&lt;pivot.offset].map{$0} : str_list[(pivot.offset+1)...].map{$0}    }    else {        return []    }}"
  },
  
  {
    "title": "Basic62 순서 바꾸기",
    "url": "/posts/ProgrammersBasic-62/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-02-06 00:00:00 +0900",
    





    
    "snippet": "문제: 순서 바꾸기문제 설명정수 리스트 num_list와 정수 n이 주어질 때, num_list를 n 번째 원소 이후의 원소들과 n 번째까지의 원소들로 나눠 n 번째 원소 이후의 원소들을 n 번째까지의 원소들 앞에 붙인 리스트를 return하도록 solution 함수를 완성해주세요.제한사항  2 ≤ num_list의 길이 ≤ 30  1 ≤ num_li...",
    "content": "문제: 순서 바꾸기문제 설명정수 리스트 num_list와 정수 n이 주어질 때, num_list를 n 번째 원소 이후의 원소들과 n 번째까지의 원소들로 나눠 n 번째 원소 이후의 원소들을 n 번째까지의 원소들 앞에 붙인 리스트를 return하도록 solution 함수를 완성해주세요.제한사항  2 ≤ num_list의 길이 ≤ 30  1 ≤ num_list의 원소 ≤ 9  1 ≤ n ≤ num_list의 길이입출력 예            num_list      n      result                  [2, 1, 6]      1      [1, 6, 2]              [5, 2, 1, 7, 5]      3      [7, 5, 5, 2, 1]      입출력 예 설명입출력 예 #1  [2, 1, 6]에서 첫 번째 이후의 원소는 [1, 6]이고 첫 번째까지의 원소는 [2]입니다. 두 리스트를 이어 붙이면 [1, 6, 2]가 됩니다.입출력 예 #2  [5, 2, 1, 7, 5]에서 세 번째 이후의 원소는 [7, 5]이고 세 번째까지의 원소는 [5, 2, 1]입니다. 두 리스트를 이어 붙이면 [7, 5, 5, 2, 1]가 됩니다.Solution  하나의 배열을 0번째부터 n번째 까지의 배열과, n번째부터 끝까지의 배열 두개로 나눕니다. 그 후 같은 타입의 배열 + 배열은 두 배열을 하나로 합치는 특성을 이용해 문제를 풀었습니다.import Foundationfunc solution(_ num_list:[Int], _ n:Int) -&gt; [Int] {        return num_list[n...].map{$0} + num_list[0..&lt;n].map{$0}}"
  },
  
  {
    "title": "Basic61 n 번째 원소부터",
    "url": "/posts/ProgrammersBasic-61/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-02-06 00:00:00 +0900",
    





    
    "snippet": "문제: n 번째 원소부터문제 설명정수 리스트 num_list와 정수 n이 주어질 때, n 번째 원소부터 마지막 원소까지의 모든 원소를 담은 리스트를 return하도록 solution 함수를 완성해주세요.제한사항  2 ≤ num_list의 길이 ≤ 30  1 ≤ num_list의 원소 ≤ 9  1 ≤ n ≤ num_list의 길이입출력 예        ...",
    "content": "문제: n 번째 원소부터문제 설명정수 리스트 num_list와 정수 n이 주어질 때, n 번째 원소부터 마지막 원소까지의 모든 원소를 담은 리스트를 return하도록 solution 함수를 완성해주세요.제한사항  2 ≤ num_list의 길이 ≤ 30  1 ≤ num_list의 원소 ≤ 9  1 ≤ n ≤ num_list의 길이입출력 예            num_list      n      result                  [2, 1, 6]      3      [6]              [5, 2, 1, 7, 5]      2      [2, 1, 7, 5]      입출력 예 설명입출력 예 #1  [2, 1, 6]의 세 번째 원소부터 마지막 원소까지의 모든 원소는 [6]입니다.입출력 예 #2  [5, 2, 1, 7, 5]의 두 번째 원소부터 마지막 원소까지의 모든 원소는 [2, 1, 7, 5]입니다.Solution  [n-1...] 을 사용해서 배열의 구간을 나누어 return 했습니다.import Foundationfunc solution(_ num_list:[Int], _ n:Int) -&gt; [Int] {    let num = n - 1    return num_list[num...].map{$0}}"
  },
  
  {
    "title": "Basic60 배열 조각하기",
    "url": "/posts/ProgrammersBasic-60/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-02-05 00:00:00 +0900",
    





    
    "snippet": "문제: 배열 조각하기문제 설명정수 배열 arr와 query가 주어집니다.query를 순회하면서 다음 작업을 반복합니다.  짝수 인덱스에서는 arr에서 query[i]번 인덱스를 제외하고 배열의 query[i]번 인덱스 뒷부분을 잘라서 버립니다.  홀수 인덱스에서는 arr에서 query[i]번 인덱스는 제외하고 배열의 query[i]번 인덱스 앞부분을 ...",
    "content": "문제: 배열 조각하기문제 설명정수 배열 arr와 query가 주어집니다.query를 순회하면서 다음 작업을 반복합니다.  짝수 인덱스에서는 arr에서 query[i]번 인덱스를 제외하고 배열의 query[i]번 인덱스 뒷부분을 잘라서 버립니다.  홀수 인덱스에서는 arr에서 query[i]번 인덱스는 제외하고 배열의 query[i]번 인덱스 앞부분을 잘라서 버립니다.위 작업을 마친 후 남은 arr의 부분 배열을 return 하는 solution 함수를 완성해 주세요.제한사항  5 ≤ arr의 길이 ≤ 100,000          0 ≤ arr의 원소 ≤ 100        1 ≤ query의 길이 &lt; min(50, arr의 길이 / 2)          query의 각 원소는 0보다 크거나 같고 남아있는 arr의 길이 보다 작습니다.      입출력 예            arr      query      result                  [0, 1, 2, 3, 4, 5]      [4, 1, 2]      [1, 2, 3]      입출력 예 설명입출력 예 #1  이번에 매번 처리할 query의 값과 처리 전후의 arr의 상태를 표로 나타내면 다음과 같습니다.            query의 값      query 처리 전      query 처리 후      비고                  4      [0, 1, 2, 3, 4, 5]      [0, 1, 2, 3, 4]      0번 인덱스의 쿼리이므로 뒷부분을 자른다.              1      [0, 1, 2, 3, 4]      [1, 2, 3, 4]      1번 인덱스의 쿼리이므로 앞부분을 자른다.              2      [1, 2, 3, 4]      [1, 2, 3]      2번 인덱스의 쿼리이므로 뒷부분을 자른다.        따라서 [1, 2, 3]을 return 합니다.Solution  \breduce(into:)를 이용해서 먼저 arr을 초기값으로 넣어주었고, query의 요소가 짝수라면 [0...q]로 slice를 해주고 홀수라면 [q...]를 적용시켜주었습니다.import Foundationfunc solution(_ arr:[Int], _ query:[Int]) -&gt; [Int] {    var index = 0    return query.reduce(into: arr) { result, q in        index % 2 == 0 ? result = result[0...q].map{$0} : result = result[q...].map{$0}        index += 1    }}"
  },
  
  {
    "title": "Basic59 2의 영역",
    "url": "/posts/ProgrammersBasic-59/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-02-05 00:00:00 +0900",
    





    
    "snippet": "문제: 2의 영역문제 설명정수 배열 arr가 주어집니다. 배열 안의 2가 모두 포함된 가장 작은 연속된 부분 배열을 return 하는 solution 함수를 완성해 주세요.단, arr에 2가 없는 경우 [-1]을 return 합니다.제한사항  1 ≤ arr의 길이 ≤ 100,000          1 ≤ arr의 원소 ≤ 10      입출력 예   ...",
    "content": "문제: 2의 영역문제 설명정수 배열 arr가 주어집니다. 배열 안의 2가 모두 포함된 가장 작은 연속된 부분 배열을 return 하는 solution 함수를 완성해 주세요.단, arr에 2가 없는 경우 [-1]을 return 합니다.제한사항  1 ≤ arr의 길이 ≤ 100,000          1 ≤ arr의 원소 ≤ 10      입출력 예            arr      result                  [1, 2, 1, 4, 5, 2, 9]      [2, 1, 4, 5, 2]              [1, 2, 1]      [2]              [1, 1, 1]      [-1]              [1, 2, 1, 2, 1, 10, 2, 1]      [2, 1, 2, 1, 10, 2]      입출력 예 설명입출력 예 #1  2가 있는 인덱스는 1번, 5번 인덱스뿐이므로 1번부터 5번 인덱스까지의 부분 배열인 [2, 1, 4, 5, 2]를 return 합니다.입출력 예 #2  2가 한 개뿐이므로 [2]를 return 합니다.입출력 예 #3  2가 배열에 없으므로 [-1]을 return 합니다.입출력 예 #4  2가 있는 인덱스는 1번, 3번, 6번 인덱스이므로 1번부터 6번 인덱스까지의 부분 배열인 [2, 1, 2, 1, 10, 2]를 return 합니다.\bSolution  enumerated().filter를 사용해서 값이 2인 요소들만 뽑아내어 그 index값을 구합니다. 그 중에 가장 앞에있는 요소와 가장 뒤에있는 요소를 찾아내어 arr를 slice해서 return해주었습니다.import Foundationfunc solution(_ arr:[Int]) -&gt; [Int] {    let indices = arr.enumerated().filter{$0.element == 2}.map{$0.offset}    let first = indices.first ?? -1    let last = indices.last ?? -1        return first == -1 ? [-1] : arr[first...last].map{$0}}"
  },
  
  {
    "title": "Basic58 배열 만들기 3",
    "url": "/posts/ProgrammersBasic-58/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-02-05 00:00:00 +0900",
    





    
    "snippet": "문제: 배열 만들기 3문제 설명정수 배열 arr와 2개의 구간이 담긴 배열 intervals가 주어집니다.intervals는 항상 [[a1, b1], [a2, b2]]의 꼴로 주어지며 각 구간은 닫힌 구간입니다. 닫힌 구간은 양 끝값과 그 사이의 값을 모두 포함하는 구간을 의미합니다.이때 배열 arr의 첫 번째 구간에 해당하는 배열과 두 번째 구간에 ...",
    "content": "문제: 배열 만들기 3문제 설명정수 배열 arr와 2개의 구간이 담긴 배열 intervals가 주어집니다.intervals는 항상 [[a1, b1], [a2, b2]]의 꼴로 주어지며 각 구간은 닫힌 구간입니다. 닫힌 구간은 양 끝값과 그 사이의 값을 모두 포함하는 구간을 의미합니다.이때 배열 arr의 첫 번째 구간에 해당하는 배열과 두 번째 구간에 해당하는 배열을 앞뒤로 붙여 새로운 배열을 만들어 return 하는 solution 함수를 완성해 주세요.제한사항  1 ≤ arr의 길이 ≤ 100,000          1 ≤ arr의 원소 &lt; 100        1 ≤ a1 ≤ b1 &lt; arr의 길이  1 ≤ a2 ≤ b2 &lt; arr의 길이입출력 예            arr      intervals      result                  [1, 2, 3, 4, 5]      [[1, 3], [0, 4]]      [2, 3, 4, 1, 2, 3, 4, 5]      입출력 예 설명입출력 예 #1  첫 번째 구간에 해당하는 배열은 [2, 3, 4] 입니다.  두 번째 구간에 해당하는 배열은 [1, 2, 3, 4, 5] 입니다.  따라서 이 두 배열을 앞뒤로 붙인 배열인 [2, 3, 4, 1, 2, 3, 4, 5]를 return 합니다.Solution  intervals에 map을 접근한 요소의 값으로 arr을 나누어서 각각 intervals의 값이 요구하는 배열을 생성합니다. 입출력 예를 입력으로 print해보면 아래와 같습니다.[ArraySlice([2, 3, 4]), ArraySlice([1, 2, 3, 4, 5])]이제 이 배열들을 reduce를 사용해서 하나의 배열로 만들었습니다. reduce의 $0으로 들어가게 되는 ()안의 값이 [] 빈 배열이 되면 배열끼리 더하는 코드를 작성할 수 있게 됩니다.import Foundationfunc solution(_ arr:[Int], _ intervals:[[Int]]) -&gt; [Int] {    return intervals.map{arr[$0[0]...$0[1]]}.reduce([]){$0+$1}}"
  },
  
  {
    "title": "Basic57 첫 번째로 나오는 음수",
    "url": "/posts/ProgrammersBasic-57/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-02-04 00:00:00 +0900",
    





    
    "snippet": "문제: 첫 번째로 나오는 음수문제 설명정수 리스트 num_list가 주어질 때, 첫 번째로 나오는 음수의 인덱스를 return하도록 solution 함수를 완성해주세요. 음수가 없다면 -1을 return합니다.제한사항  5 ≤ num_list의 길이 ≤ 100  -10 ≤ num_list의 원소 ≤ 100입출력 예            num_list ...",
    "content": "문제: 첫 번째로 나오는 음수문제 설명정수 리스트 num_list가 주어질 때, 첫 번째로 나오는 음수의 인덱스를 return하도록 solution 함수를 완성해주세요. 음수가 없다면 -1을 return합니다.제한사항  5 ≤ num_list의 길이 ≤ 100  -10 ≤ num_list의 원소 ≤ 100입출력 예            num_list      result                  [12, 4, 15, 46, 38, -2, 15]      5              [13, 22, 53, 24, 15, 6]      -1      입출력 예 설명입출력 예 #1  5번 인덱스에서 음수가 처음 등장하므로 5를 return합니다.입출력 예 #2  음수가 없으므로 -1을 return합니다.Solution  index를 리턴해야하기 때문에 enumerated를 사용했고, 값이 음수인 경우의 첫번째 인덱스를 리턴, 없다면 -1을 리턴하게 코드를 작성했습니다.import Foundationfunc solution(_ num_list:[Int]) -&gt; Int {    return num_list.enumerated().filter{index, value in value &lt; 0}.map{$0.offset}.first ?? -1}"
  },
  
  {
    "title": "Basic56 리스트 자르기",
    "url": "/posts/ProgrammersBasic-56/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-02-03 00:00:00 +0900",
    





    
    "snippet": "문제: 리스트 자르기문제 설명정수 n과 정수 3개가 담긴 리스트 slicer 그리고 정수 여러 개가 담긴 리스트 num_list가 주어집니다. slicer에 담긴 정수를 차례대로 a, b, c라고 할 때, n에 따라 다음과 같이 num_list를 슬라이싱 하려고 합니다.  n = 1 : num_list의 0번 인덱스부터 b번 인덱스까지  n = 2 :...",
    "content": "문제: 리스트 자르기문제 설명정수 n과 정수 3개가 담긴 리스트 slicer 그리고 정수 여러 개가 담긴 리스트 num_list가 주어집니다. slicer에 담긴 정수를 차례대로 a, b, c라고 할 때, n에 따라 다음과 같이 num_list를 슬라이싱 하려고 합니다.  n = 1 : num_list의 0번 인덱스부터 b번 인덱스까지  n = 2 : num_list의 a번 인덱스부터 마지막 인덱스까지  n = 3 : num_list의 a번 인덱스부터 b번 인덱스까지  n = 4 : num_list의 a번 인덱스부터 b번 인덱스까지 c 간격으로올바르게 슬라이싱한 리스트를 return하도록 solution 함수를 완성해주세요.제한사항  n 은 1, 2, 3, 4 중 하나입니다.  slicer의 길이 = 3      slicer에 담긴 정수를 차례대로 a, b, c라고 할 때          0 ≤ a ≤ b ≤ num_list의 길이 - 1       1 ≤ c ≤ 3            5 ≤ num_list의 길이 ≤ 30    0 ≤ num_list의 원소 ≤ 100입출력 예            n      slicer      num_list      result                  3      [1, 5, 2]      [1, 2, 3, 4, 5, 6, 7, 8, 9]      [2, 3, 4, 5, 6]              4      [1, 5, 2]      [1, 2, 3, 4, 5, 6, 7, 8, 9]      [2, 4, 6]      입출력 예 설명입출력 예 #1  [1, 2, 3, 4, 5, 6, 7, 8, 9]에서 1번 인덱스부터 5번 인덱스까지 자른 리스트는 [2, 3, 4, 5, 6]입니다.입출력 예 #2  [1, 2, 3, 4, 5, 6, 7, 8, 9]에서 1번 인덱스부터 5번 인덱스까지 2개 간격으로 자른 리스트는 [2, 4, 6]입니다.Solution  switch case로 n의 4가지 경우를 구분하고, 각각 조건에 맞게 구현했습니다. n이 4일 때 c 간격으로를 구현하는 방법은 여러가지가 있겠지만, %연산자를 이용해서 구했습니다.import Foundationfunc solution(_ n:Int, _ slicer:[Int], _ num_list:[Int]) -&gt; [Int] {    let (a, b, c) = (slicer[0], slicer[1], slicer[2])    switch n {        case 1:            return num_list[0...b].map{$0}        case 2:            return num_list[a...].map{$0}        case 3:            return num_list[a...b].map{$0}        case 4:            return num_list[a...b].indices.filter{$0%c == 0}.map{num_list[$0]}        default:            return [0]    }}"
  },
  
  {
    "title": "Basic55 가까운 1 찾기",
    "url": "/posts/ProgrammersBasic-55/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-02-02 00:00:00 +0900",
    





    
    "snippet": "문제: 가까운 1 찾기문제 설명정수 배열 arr가 주어집니다. 이때 arr의 원소는 1 또는 0입니다. 정수 idx가 주어졌을 때, idx보다 크면서 배열의 값이 1인 가장 작은 인덱스를 찾아서 반환하는 solution 함수를 완성해 주세요.단, 만약 그러한 인덱스가 없다면 -1을 반환합니다.제한사항  3 ≤ arr의 길이 ≤ 100’000      ...",
    "content": "문제: 가까운 1 찾기문제 설명정수 배열 arr가 주어집니다. 이때 arr의 원소는 1 또는 0입니다. 정수 idx가 주어졌을 때, idx보다 크면서 배열의 값이 1인 가장 작은 인덱스를 찾아서 반환하는 solution 함수를 완성해 주세요.단, 만약 그러한 인덱스가 없다면 -1을 반환합니다.제한사항  3 ≤ arr의 길이 ≤ 100’000          arr의 원소는 전부 1 또는 0입니다.       입출력 예            arr      idx      result                  [0, 0, 0, 1]      1      3              [1, 0, 0, 1, 0, 0]      4      -1              [1, 1, 1, 1, 0]      3      3      입출력 예 설명입출력 예 #1  1보다 크면서 원소가 1인 가장 작은 인덱스는 3입니다. 따라서 3을 return 합니다.입출력 예 #2  4번 인덱스 이후에 1은 등장하지 않습니다. 따라서 -1을 return 합니다.입출력 예 #3  3번 인덱스의 값이 1입니다. 따라서 3을 return 합니다.Solution``  arr를 idx 부터 끝까지의 배열을 추출해 냅니다. enumerated를 사용해서 index와 element를 받아오고 그중 element가 1인 요소들을 filter를 사용해 걸러냅니다. 그 중의 최초 값을 반환하는데 만약 없다면 -1을 반환합니다. 현재 이 배열의 index는 idx앞의 값들을 제외하고 0부터 시작했기 때문에 idx를 마지막에 더해줍니다.import Foundationfunc solution(_ arr:[Int], _ idx:Int) -&gt; Int {    return (arr[idx...].enumerated().filter{$0.element == 1}.map{$0.offset}.first ?? -1-idx) + idx}"
  },
  
  {
    "title": "Basic54 카운트 다운",
    "url": "/posts/ProgrammersBasic-54/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-02-02 00:00:00 +0900",
    





    
    "snippet": "문제: 카운트 다운문제 설명정수 start_num와 end_num가 주어질 때, start_num에서 end_num까지 1씩 감소하는 수들을 차례로 담은 리스트를 return하도록 solution 함수를 완성해주세요.제한사항  0 ≤ end_num ≤ start_num ≤ 50입출력 예            start_num      end_num   ...",
    "content": "문제: 카운트 다운문제 설명정수 start_num와 end_num가 주어질 때, start_num에서 end_num까지 1씩 감소하는 수들을 차례로 담은 리스트를 return하도록 solution 함수를 완성해주세요.제한사항  0 ≤ end_num ≤ start_num ≤ 50입출력 예            start_num      end_num      result                  10      3      [10, 9, 8, 7, 6, 5, 4, 3]      입출력 예 설명입출력 예 #1  10부터 3까지 1씩 감소하는 수를 담은 리스트는 [10, 9, 8, 7, 6, 5, 4, 3]입니다.Solutionimport Foundationfunc solution(_ start:Int, _ end_num:Int) -&gt; [Int] {    return (end_num...start).sorted(by: &gt;)}"
  },
  
  {
    "title": "Basic53 글자 지우기",
    "url": "/posts/ProgrammersBasic-53/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-02-01 00:00:00 +0900",
    





    
    "snippet": "문제: 글자 지우기문제 설명문자열 my_string과 정수 배열 indices가 주어질 때, my_string에서 indices의 원소에 해당하는 인덱스의 글자를 지우고 이어 붙인 문자열을 return 하는 solution 함수를 작성해 주세요.제한사항  1 ≤ indices의 길이 &lt; my_string의 길이 ≤ 100  my_string은 영...",
    "content": "문제: 글자 지우기문제 설명문자열 my_string과 정수 배열 indices가 주어질 때, my_string에서 indices의 원소에 해당하는 인덱스의 글자를 지우고 이어 붙인 문자열을 return 하는 solution 함수를 작성해 주세요.제한사항  1 ≤ indices의 길이 &lt; my_string의 길이 ≤ 100  my_string은 영소문자로만 이루어져 있습니다  0 ≤ indices의 원소 &lt; my_string의 길이  indices의 원소는 모두 서로 다릅니다.입출력 예            my_string      indices      result                  “apporoograpemmemprs”      [1, 16, 6, 15, 0, 10, 11, 3]      “programmers”      입출력 예 설명입출력 예 #1      예제 1번의 my_string의 인덱스가 잘 보이도록 표를 만들면 다음과 같습니다.                            index          0          1          2          3          4          5          6          7          8          9          10          11          12          13          14          15          16          17          18                                      my_string          a          p          p          o          r          o          o          g          r          a          p          e          m          m          e          m          p          r          s                      indices에 있는 인덱스의 글자들을 지우고 이어붙이면 “programmers”가 되므로 이를 return 합니다.  Solution  \b처음에 아래 코드처럼 바로 remove(at:) 을 사용했는데, 이렇게 할 경우에는 중간에 있는 글자가 지워지면, 전체 길이가 짧아지고, 동시에 지워진 글자 뒤의 글자들의 index가 바뀌어서 제대로된 결과를 얻지 못했습니다.func solution(_ my_string:String, _ indices:[Int]) -&gt; String {\tvar result = Array(my_string)\tresult.map{result.remove(at: $0)}}  따라서, 주어진 indices를 내림차순으로 정렬시켜서 글자를 맨 뒤에서부터 지워나가서 인덱스 변화에 영향을 받지 않도록 코드를 작성했습니다.import Foundationfunc solution(_ my_string:String, _ indices:[Int]) -&gt; String {    var result = Array(my_string)    var sortedIndices = indices.sorted(by: &gt;)        sortedIndices.map{result.remove(at: $0)}        return String(result)} "
  },
  
  {
    "title": "Basic52 배열 만들기 1",
    "url": "/posts/ProgrammersBasic-52/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-01-27 00:00:00 +0900",
    





    
    "snippet": "문제: 배열 만들기 1문제 설명정수 n과 k가 주어졌을 때, 1 이상 n이하의 정수 중에서 k의 배수를 오름차순으로 저장한 배열을 return 하는 solution 함수를 완성해 주세요.제한사항  1 ≤ n ≤ 1,000,000  1 ≤ k ≤ min(1,000, n)입출력 예            n      k      result          ...",
    "content": "문제: 배열 만들기 1문제 설명정수 n과 k가 주어졌을 때, 1 이상 n이하의 정수 중에서 k의 배수를 오름차순으로 저장한 배열을 return 하는 solution 함수를 완성해 주세요.제한사항  1 ≤ n ≤ 1,000,000  1 ≤ k ≤ min(1,000, n)입출력 예            n      k      result                  10      3      [3, 6, 9]              15      5      [5, 10, 15]      입출력 예 설명입출력 예 #1  1 이상 10 이하의 3의 배수는 3, 6, 9 이므로 [3, 6, 9]를 return 합니다.입출력 예 #2  1 이상 15 이하의 5의 배수는 5, 10, 15 이므로 [5, 10, 15]를 return 합니다.Solutionimport Foundationfunc solution(_ n:Int, _ k:Int) -&gt; [Int] {        return (1...n).filter{$0 % k == 0}}"
  },
  
  {
    "title": "Basic51 문자 개수 세기",
    "url": "/posts/ProgrammersBasic-51/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-01-26 00:00:00 +0900",
    





    
    "snippet": "문제: 문자 개수 세기문제 설명알파벳 대소문자로만 이루어진 문자열 my_string이 주어질 때, my_string에서 ‘A’의 개수, my_string에서 ‘B’의 개수,…, my_string에서 ‘Z’의 개수, my_string에서 ‘a’의 개수, my_string에서 ‘b’의 개수,…, my_string에서 ‘z’의 개수를 순서대로 담은 길이 5...",
    "content": "문제: 문자 개수 세기문제 설명알파벳 대소문자로만 이루어진 문자열 my_string이 주어질 때, my_string에서 ‘A’의 개수, my_string에서 ‘B’의 개수,…, my_string에서 ‘Z’의 개수, my_string에서 ‘a’의 개수, my_string에서 ‘b’의 개수,…, my_string에서 ‘z’의 개수를 순서대로 담은 길이 52의 정수 배열을 return 하는 solution 함수를 작성해 주세요.제한사항  1 ≤ my_string의 길이 ≤ 1,000입출력 예            my_string      result                  “Programmers”      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0]      입출력 예 설명입출력 예 #1  예제 1번의 my_string에서 ‘P’가 1개, ‘a’가 1개, ‘e’가 1개, ‘g’가 1개, ‘m’이 2개, ‘o’가 1개, ‘r’가 3개, ‘s’가 1개 있으므로 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0]를 return 합니다.Solution  ascii코드의 값을 이용해서 문제를 풀었습니다. 대문자 알파벳은 65~90까지이고, 소문자 알파벳은 97~122입니다.      길이 52의 0이담긴 result 배열을 만듭니다. 0부터 25 인덱스 까지는 대문자, 26부터 51까지는 소문자의 인덱스입니다.    my_string의 각 문자들을 돌면서 ascii코드 값이 91 미만이라면 대문자, 이상이면 소문자라고 판멸합니다.    대문자라면 65로 나눈 나머지를 구하고, 소문자라면 97로 나눈 나머지에 26을 더해서 각 알파벳의 인덱스를 찾습니다.    result 배열에 인덱스 자리에 1을 더해줍니다.  import Foundationfunc solution(_ my_string:String) -&gt; [Int] {    var result = Array(repeating:0, count: 52)    my_string.map{ Int($0.asciiValue!) &lt; 91 ? Int($0.asciiValue!) % 65 : Int($0.asciiValue!) % 97 + 26}.map{result[$0] += 1}    return result}"
  },
  
  {
    "title": "Basic50 qr code",
    "url": "/posts/ProgrammersBasic-50/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-01-25 00:00:00 +0900",
    





    
    "snippet": "문제: qr code문제 설명두 정수 q, r과 문자열 code가 주어질 때, code의 각 인덱스를 q로 나누었을 때 나머지가 r인 위치의 문자를 앞에서부터 순서대로 이어 붙인 문자열을 return 하는 solution 함수를 작성해 주세요.제한사항  0 ≤ r &lt; q ≤ 20  r &lt; code의 길이 ≤ 1,000  code는 영소문자로...",
    "content": "문제: qr code문제 설명두 정수 q, r과 문자열 code가 주어질 때, code의 각 인덱스를 q로 나누었을 때 나머지가 r인 위치의 문자를 앞에서부터 순서대로 이어 붙인 문자열을 return 하는 solution 함수를 작성해 주세요.제한사항  0 ≤ r &lt; q ≤ 20  r &lt; code의 길이 ≤ 1,000  code는 영소문자로만 이루어져 있습니다.입출력 예            q      r      code      result                  3      1      “qjnwezgrpirldywt”      “jerry”              1      0      “programmers”      “programmers”      입출력 예 설명입출력 예 #1      예제 1번의 q와 r은 각각 3, 1이고 인덱스와 그 값을 q로 나눈 나머지가 잘 보이도록 표로 만들면 다음과 같습니다.                            code          q          j          n          w          e          z          g          r          p          i          r          l          d          y          w          t                                      index          0          1          2          3          4          5          6          7          8          9          10          11          12          13          14          15                          q로 나눈 나머지          0          1          2          0          1          2          0          1          2          0          1          2          0          1          2          0                      q로 나눈 나머지가 1인 인덱스의 문자들을 앞에서부터 순서대로 이어 붙이면 “jerry”가 되므로 이를 return 합니다.  입출력 예 #2      예제 2번의 q와 r은 각각 1, 0이고 인덱스와 그 값을 q로 나눈 나머지가 잘 보이도록 표로 만들면 다음과 같습니다.                            code          p          r          o          g          r          a          m          m          e          r          s                                      index          0          1          2          3          4          5          6          7          8          9          10                          q로 나눈 나머지          0          0          0          0          0          0          0          0          0          0          0                      q로 나눈 나머지가 1인 인덱스의 문자들을 앞에서부터 순서대로 이어 붙이면 “programmers”가 되므로 이를 return 합니다.  Solution  enumerated().filter와 map을 사용해서 문제를 풀었습니다.import Foundationfunc solution(_ q:Int, _ r:Int, _ code:String) -&gt; String {    return String(code.enumerated().filter{index, value in index % q == r}.map{$0.element})}"
  },
  
  {
    "title": "Basic49 세로 읽기",
    "url": "/posts/ProgrammersBasic-49/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-01-25 00:00:00 +0900",
    





    
    "snippet": "문제: 세로 읽기문제 설명문자열 my_string과 두 정수 m, c가 주어집니다. my_string을 한 줄에 m 글자씩 가로로 적었을 때 왼쪽부터 세로로 c번째 열에 적힌 글자들을 문자열로 return 하는 solution 함수를 작성해 주세요.제한사항  my_string은 영소문자로 이루어져 있습니다.  1 ≤ m ≤ my_string의 길이 ≤...",
    "content": "문제: 세로 읽기문제 설명문자열 my_string과 두 정수 m, c가 주어집니다. my_string을 한 줄에 m 글자씩 가로로 적었을 때 왼쪽부터 세로로 c번째 열에 적힌 글자들을 문자열로 return 하는 solution 함수를 작성해 주세요.제한사항  my_string은 영소문자로 이루어져 있습니다.  1 ≤ m ≤ my_string의 길이 ≤ 1,000  m은 my_string 길이의 약수로만 주어집니다.  1 ≤ c ≤ m입출력 예            my_string      m      c      result                  “ihrhbakrfpndopljhygc”      4      2      “happy”              “programmers”      1      1      “programmers”      입출력 예 설명입출력 예 #1      예제 1번의 my_string을 한 줄에 4 글자씩 쓰면 다음의 표와 같습니다.                            1열          2열          3열          4열                                      i          h          r          h                          b          a          k          r                          f          p          n          d                          o          p          l          j                          h          y          g          c                      2열에 적힌 글자를 세로로 읽으면 happy이므로 “happy”를 return 합니다.  입출력 예 #2  예제 2번의 my_string은 m이 1이므로 세로로 “programmers”를 적는 것과 같고 따라서 1열에 적힌 글자를 세로로 읽으면 programmers입니다. 따라서 “programmers”를 return 합니다.Solution  my_string의 각각 index의 값을 m으로 나누었을 때의 나머지 값은 2차원 배열로 봤을 때 열의 값과 같습니다. 이를 이용해서 문제를 풀었습니다.import Foundationfunc solution(_ my_string:String, _ m:Int, _ c:Int) -&gt; String {    var strArray = Array(my_string)    return String(strArray.indices.filter{$0 % m == c-1}.map{strArray[$0]})}"
  },
  
  {
    "title": "Basic48 문자열 뒤집기",
    "url": "/posts/ProgrammersBasic-48/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-01-25 00:00:00 +0900",
    





    
    "snippet": "문제: 문자열 뒤집기문제 설명문자열 my_string과 정수 s, e가 매개변수로 주어질 때, my_string에서 인덱스 s부터 인덱스 e까지를 뒤집은 문자열을 return 하는 solution 함수를 작성해 주세요.제한사항  my_string은 숫자와 알파벳으로만 이루어져 있습니다.  1 ≤ my_string의 길이 ≤ 1,000  0 ≤ s ≤ ...",
    "content": "문제: 문자열 뒤집기문제 설명문자열 my_string과 정수 s, e가 매개변수로 주어질 때, my_string에서 인덱스 s부터 인덱스 e까지를 뒤집은 문자열을 return 하는 solution 함수를 작성해 주세요.제한사항  my_string은 숫자와 알파벳으로만 이루어져 있습니다.  1 ≤ my_string의 길이 ≤ 1,000  0 ≤ s ≤ e &lt; my_string의 길이입출력 예            my_string      s      e      result                  “Progra21Sremm3”      6      12      “ProgrammerS123”              “Stanley1yelnatS”      4      10      “Stanley1yelnatS”      입출력 예 설명입출력 예 #1  예제 1번의 my_string에서 인덱스 6부터 인덱스 12까지를 뒤집은 문자열은 “ProgrammerS123”이므로 “ProgrammerS123”를 return 합니다.입출력 예 #2  예제 2번의 my_string에서 인덱스 4부터 인덱스 10까지를 뒤집으면 원래 문자열과 같은 “Stanley1yelnatS”이므로 “Stanley1yelnatS”를 return 합니다.Solution  my_string을 Array로 변환해주고, Array에 s부터 e까지를 reverse한 후에 다시 String으로 변환해주었습니다.import Foundationfunc solution(_ my_string:String, _ s:Int, _ e:Int) -&gt; String {    var strArray = Array(my_string)    strArray[s...e].reverse()        return String(strArray)}"
  },
  
  {
    "title": "Basic47 접두사인지 확인하기",
    "url": "/posts/ProgrammersBasic-47/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-01-25 00:00:00 +0900",
    





    
    "snippet": "문제: 접두사인지 확인하기문제 설명어떤 문자열에 대해서 접두사는 특정 인덱스까지의 문자열을 의미합니다. 예를 들어, “banana”의 모든 접두사는 “b”, “ba”, “ban”, “bana”, “banan”, “banana”입니다.문자열 my_string과 is_prefix가 주어질 때, is_prefix가 my_string의 접두사라면 1을, 아니...",
    "content": "문제: 접두사인지 확인하기문제 설명어떤 문자열에 대해서 접두사는 특정 인덱스까지의 문자열을 의미합니다. 예를 들어, “banana”의 모든 접두사는 “b”, “ba”, “ban”, “bana”, “banan”, “banana”입니다.문자열 my_string과 is_prefix가 주어질 때, is_prefix가 my_string의 접두사라면 1을, 아니면 0을 return 하는 solution 함수를 작성해 주세요.제한사항  1 ≤ my_string의 길이 ≤ 100  1 ≤ is_prefix의 길이 ≤ 100  my_string과 is_prefix는 영소문자로만 이루어져 있습니다.입출력 예            my_string      is_prefix      result                  “banana”      “ban”      1              “banana”      “nan”      0              “banana”      “abcd”      0              “banana”      “bananan”      0      입출력 예 설명입출력 예 #1  예제 1번에서 is_prefix가 my_string의 접두사이기 때문에 1을 return 합니다.입출력 예 #2  예제 2번에서 is_prefix가 my_string의 접두사가 아니기 때문에 0을 return 합니다.입출력 예 #3  예제 3번에서 is_prefix가 my_string의 접두사가 아니기 때문에 0을 return 합니다.입출력 예 #4  예제 4번에서 is_prefix가 my_string의 접두사가 아니기 때문에 0을 return 합니다.Solutionimport Foundationfunc solution(_ my_string:String, _ is_prefix:String) -&gt; Int {    return my_string.prefix(is_prefix.count) == is_prefix ? 1 : 0}"
  },
  
  {
    "title": "Basic46 문자열의 앞의 n글자",
    "url": "/posts/ProgrammersBasic-46/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-01-25 00:00:00 +0900",
    





    
    "snippet": "문제: 문자열의 앞의 n글자문제 설명문자열 my_string과 정수 n이 매개변수로 주어질 때, my_string의 앞의 n글자로 이루어진 문자열을 return 하는 solution 함수를 작성해 주세요.제한사항  my_string은 숫자와 알파벳으로 이루어져 있습니다.  1 ≤ my_string의 길이 ≤ 1,000  1 ≤ n ≤ my_string...",
    "content": "문제: 문자열의 앞의 n글자문제 설명문자열 my_string과 정수 n이 매개변수로 주어질 때, my_string의 앞의 n글자로 이루어진 문자열을 return 하는 solution 함수를 작성해 주세요.제한사항  my_string은 숫자와 알파벳으로 이루어져 있습니다.  1 ≤ my_string의 길이 ≤ 1,000  1 ≤ n ≤ my_string의 길이입출력 예            my_string      n      result                  “ProgrammerS123”      11      “ProgrammerS”              “He110W0r1d”      5      “He110”      입출력 예입출력 예 #1  예제 1번의 my_string에서 앞의 11글자는 “ProgrammerS”이므로 이 문자열을 return 합니다.입출력 예 #2  예제 2번의 my_string에서 앞의 5글자는 “He110”이므로 이 문자열을 return 합니다.Solutionimport Foundationfunc solution(_ my_string:String, _ n:Int) -&gt; String {    return String(my_string.prefix(n))}"
  },
  
  {
    "title": "Basic45 접미사인지 확인하기",
    "url": "/posts/ProgrammersBasic-45/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-01-25 00:00:00 +0900",
    





    
    "snippet": "문제: 접미사인지 확인하기문제 설명어떤 문자열에 대해서 접미사는 특정 인덱스부터 시작하는 문자열을 의미합니다. 예를 들어, “banana”의 모든 접미사는 “banana”, “anana”, “nana”, “ana”, “na”, “a”입니다.문자열 my_string과 is_suffix가 주어질 때, is_suffix가 my_string의 접미사라면 1을...",
    "content": "문제: 접미사인지 확인하기문제 설명어떤 문자열에 대해서 접미사는 특정 인덱스부터 시작하는 문자열을 의미합니다. 예를 들어, “banana”의 모든 접미사는 “banana”, “anana”, “nana”, “ana”, “na”, “a”입니다.문자열 my_string과 is_suffix가 주어질 때, is_suffix가 my_string의 접미사라면 1을, 아니면 0을 return 하는 solution 함수를 작성해 주세요.제한사항  1 ≤ my_string의 길이 ≤ 100  1 ≤ is_suffix의 길이 ≤ 100  my_string과 is_suffix는 영소문자로만 이루어져 있습니다.입출력 예            my_string      is_suffix      result                  “banana”      “ana”      1              “banana”      “nan”      0              “banana”      “wxyz”      0              “banana”      “abanana”      0      입출력 예 설명입출력 예 #1  예제 1번에서 is_suffix가 my_string의 접미사이기 때문에 1을 return 합니다.입출력 예 #2  예제 2번에서 is_suffix가 my_string의 접미사가 아니기 때문에 0을 return 합니다.입출력 예 #3  예제 3번에서 is_suffix가 my_string의 접미사가 아니기 때문에 0을 return 합니다.입출력 예 #4  예제 4번에서 is_suffix가 my_string의 접미사가 아니기 때문에 0을 return 합니다.Solution  \bsuffix 함수를 사용해서 my_string에 is_suffix.count 숫자만큼 suffix를 실행시켜서, 그 값이 is_suffix와 같으면 1 아니면 0 을 반환합니다.import Foundationfunc solution(_ my_string:String, _ is_suffix:String) -&gt; Int {    return is_suffix == my_string.suffix(is_suffix.count) ? 1 : 0}  hasSuffix라는 함수를 찾아서 사용해봤습니다.import Foundationfunc solution(_ my_string:String, _ is_suffix:String) -&gt; Int {    return my_string.hasSuffix(is_suffix) ? 1:0}"
  },
  
  {
    "title": "Basic44 접미사 배열",
    "url": "/posts/ProgrammersBasic-44/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-01-25 00:00:00 +0900",
    





    
    "snippet": "문제: 접미사 배열문제 설명어떤 문자열에 대해서 접미사는 특정 인덱스부터 시작하는 문자열을 의미합니다. 예를 들어, “banana”의 모든 접미사는 “banana”, “anana”, “nana”, “ana”, “na”, “a”입니다.문자열 my_string이 매개변수로 주어질 때, my_string의 모든 접미사를 사전순으로 정렬한 문자열 배열을 re...",
    "content": "문제: 접미사 배열문제 설명어떤 문자열에 대해서 접미사는 특정 인덱스부터 시작하는 문자열을 의미합니다. 예를 들어, “banana”의 모든 접미사는 “banana”, “anana”, “nana”, “ana”, “na”, “a”입니다.문자열 my_string이 매개변수로 주어질 때, my_string의 모든 접미사를 사전순으로 정렬한 문자열 배열을 return 하는 solution 함수를 작성해 주세요.제한사항  my_string은 알파벳 소문자로만 이루어져 있습니다.  1 ≤ my_string의 길이 ≤ 100입출력 예            my_string      result                  “banana”      [“a”, “ana”, “anana”, “banana”, “na”, “nana”]              “programmers”      [“ammers”, “ers”, “grammers”, “mers”, “mmers”, “ogrammers”, “programmers”, “rammers”, “rogrammers”, “rs”, “s”]      입출력 예 설명입출력 예 #1  예제 1번의 my_string는 “banana”로 모든 접미사는 문제의 설명과 같습니다. 이를 사전순으로 정렬하면 “a”, “ana”, “anana”, “banana”, “na”, “nana”이므로 [“a”, “ana”, “anana”, “banana”, “na”, “nana”]를 return 합니다.입출력 예 #2  예제 2번의 my_string는 “programmers”이고 모든 접미사는 “programmers”, “rogrammers”, “ogrammers”, “grammers”, “rammers”, “ammers”, “mmers”, “mers”, “ers”, “rs”, “s”입니다. 이를 사전순으로 정렬한 문자열 배열 [“ammers”, “ers”, “grammers”, “mers”, “mmers”, “ogrammers”, “programmers”, “rammers”, “rogrammers”, “rs”, “s”]를 return 합니다.Solution  for문과 suffix를 사용해서 문제를 풀었습니다.import Foundationfunc solution(_ my_string:String) -&gt; [String] {    var result = [String]()    for i in 1...my_string.count {        result.append(String(my_string.suffix(i)))    }        return result.sorted()}  이후 map을 사용해서도 문제를 풀어봤습니다.import Foundationfunc solution(_ my_string:String) -&gt; [String] {    return my_string.indices.map{String(my_string.suffix(from: $0))}.sorted()}"
  },
  
  {
    "title": "Basic43 문자열의 뒤의 n글자",
    "url": "/posts/ProgrammersBasic-43/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-01-25 00:00:00 +0900",
    





    
    "snippet": "문제: 문자열의 뒤의 n글자문제 설명문자열 my_string과 정수 n이 매개변수로 주어질 때, my_string의 뒤의 n글자로 이루어진 문자열을 return 하는 solution 함수를 작성해 주세요.제한사항  my_string은 숫자와 알파벳으로 이루어져 있습니다.  1 ≤ my_string의 길이 ≤ 1,000  1 ≤ n ≤ my_string...",
    "content": "문제: 문자열의 뒤의 n글자문제 설명문자열 my_string과 정수 n이 매개변수로 주어질 때, my_string의 뒤의 n글자로 이루어진 문자열을 return 하는 solution 함수를 작성해 주세요.제한사항  my_string은 숫자와 알파벳으로 이루어져 있습니다.  1 ≤ my_string의 길이 ≤ 1,000  1 ≤ n ≤ my_string의 길이입출력 예            my_string      n      result                  “ProgrammerS123”      11      “grammerS123”              “He110W0r1d”      5      “W0r1d”      입출력 예입출력 예 #1  예제 1번의 my_string에서 뒤의 11글자는 “grammerS123”이므로 이 문자열을 return 합니다.입출력 예 #2  예제 2번의 my_string에서 뒤의 5글자는 “W0r1d”이므로 이 문자열을 return 합니다.Solutionimport Foundationfunc solution(_ my_string:String, _ n:Int) -&gt; String {    return String(my_string.suffix(n))}"
  },
  
  {
    "title": "Basic42 부분 문자열 이어 붙여 문자열 만들기",
    "url": "/posts/ProgrammersBasic-42/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-01-24 00:00:00 +0900",
    





    
    "snippet": "문제: 부분 문자열 이어 붙여 문자열 만들기문제 설명길이가 같은 문자열 배열 my_strings와 이차원 정수 배열 parts가 매개변수로 주어집니다. parts[i]는 [s, e] 형태로, my_string[i]의 인덱스 s부터 인덱스 e까지의 부분 문자열을 의미합니다. 각 my_strings의 원소의 parts에 해당하는 부분 문자열을 순서대로 이...",
    "content": "문제: 부분 문자열 이어 붙여 문자열 만들기문제 설명길이가 같은 문자열 배열 my_strings와 이차원 정수 배열 parts가 매개변수로 주어집니다. parts[i]는 [s, e] 형태로, my_string[i]의 인덱스 s부터 인덱스 e까지의 부분 문자열을 의미합니다. 각 my_strings의 원소의 parts에 해당하는 부분 문자열을 순서대로 이어 붙인 문자열을 return 하는 solution 함수를 작성해 주세요.제한사항  1 ≤ my_strings의 길이 = parts의 길이 ≤ 100  1 ≤ my_strings의 원소의 길이 ≤ 100  parts[i]를 [s, e]라 할 때, 다음을 만족합니다.          0 ≤ s ≤ e &lt; my_strings[i]의 길이      입출력 예            my_strings      parts      result                  [“progressive”, “hamburger”, “hammer”, “ahocorasick”]      [[0, 4], [1, 2], [3, 5], [7, 7]]      “programmers”      입출력 예 설명입출력 예 #1      예제 1번의 입력을 보기 좋게 표로 나타내면 다음과 같습니다.                            i          my_strings[i]          parts[i]          부분 문자열                                      0          “progressive”          [0, 4]          “progr”                          1          “hamburger”          [1, 2]          “am”                          2          “hammer”          [3, 5]          “mer”                          3          “ahocorasick”          [7, 7]          ”s”                      각 부분 문자열을 순서대로 이어 붙인 문자열은 “programmers”입니다. 따라서 “programmers”를 return 합니다.  Solution  이전 배열만들기 5 문제에서 배운 prefix, suffix와 enumerated(),map을 사용해서 문제를 풀었습니다.import Foundationfunc solution(_ my_strings:[String], _ parts:[[Int]]) -&gt; String {    var result = \"\"    parts.enumerated().map{ index, value in        let (s, e) = (value[0], value[1])        result += my_strings[index].prefix(e+1).suffix(e-s+1)    }        return result}"
  },
  
  {
    "title": "Basic41 배열만들기 5",
    "url": "/posts/ProgrammersBasic-41/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-01-24 00:00:00 +0900",
    





    
    "snippet": "문제: 배열만들기 5문제 설명문자열 배열 intStrs와 정수 k, s, l가 주어집니다. intStrs의 원소는 숫자로 이루어져 있습니다. 배열 intStrs의 각 원소마다 s번 인덱스에서 시작하는 길이 l짜리 부분 문자열을 잘라내 정수로 변환합니다. 이때 변환한 정수값이 k보다 큰 값들을 담은 배열을 return 하는 solution 함수를 완성해...",
    "content": "문제: 배열만들기 5문제 설명문자열 배열 intStrs와 정수 k, s, l가 주어집니다. intStrs의 원소는 숫자로 이루어져 있습니다. 배열 intStrs의 각 원소마다 s번 인덱스에서 시작하는 길이 l짜리 부분 문자열을 잘라내 정수로 변환합니다. 이때 변환한 정수값이 k보다 큰 값들을 담은 배열을 return 하는 solution 함수를 완성해 주세요.제한사항  0 ≤ s &lt; 100  1 ≤ l ≤ 8  10l - 1 ≤ k &lt; 10l  1 ≤ intStrs의 길이 ≤ 10,000          s + l ≤ intStrs의 원소의 길이 ≤ 120      입출력 예            intStrs      k      s      l      result                  [“0123456789”,”9876543210”,”9999999999999”]      50000      5      5      [56789, 99999]      입출력 예 설명입출력 예 #1  idx에 따라 잘라낸 문자열과 그에 따른 ret의 변화를 표시하면 다음 표와 같습니다.            idx      잘라낸 문자열      ret                  0      “56789”      [56789]              1      “43210”      [56789]              2      “99999”      [56789, 99999]        따라서 [56789, 99999]를 return 합니다.Solution  처음에 map, filter를 사용해서 풀려고 노력해봤는데, 풀기는 했지만 코드를 알아보기 어렵고 굉장히 비효율적인 코드가 되었습니다.import Foundationfunc solution(_ intStrs:[String], _ k:Int, _ s:Int, _ l:Int) -&gt; [Int] {    let arr = intStrs.map{ $0.enumerated().filter{$0.offset &gt;= s &amp;&amp; $0.offset &lt; s+l}.map{String($0.element)}.joined()}        return arr.map{Int($0)!}.filter{$0 &gt; k}}  이후 String.prefix(), String.suffix()를 사용해서 문제를 푸는 방법을 알았습니다. prefix(5)는 앞에서 5번째까지의 string값을 가져오는 것이고,suffix(5)는 뒤에서 5번째까지의 string값을 가져오는 함수입니다.import Foundationfunc solution(_ intStrs:[String], _ k:Int, _ s:Int, _ l:Int) -&gt; [Int] {    let result = intStrs.map {Int($0.prefix(s+l).suffix(s))!}.filter{$0 &gt; k}    return result}"
  },
  
  {
    "title": "Basic40 문자열 여러 번 뒤집기",
    "url": "/posts/ProgrammersBasic-40/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-01-23 00:00:00 +0900",
    





    
    "snippet": "## 문제: 문자열 여러 번 뒤집기 ###### 문제 설명문자열 my_string과 이차원 정수 배열 queries가 매개변수로 주어집니다. queries의 원소는 [s, e] 형태로, my_string의 인덱스 s부터 인덱스 e까지를 뒤집으라는 의미입니다. my_string에 queries의 명령을 순서대로 처리한 후의 문자열을 return 하는 s...",
    "content": "## 문제: 문자열 여러 번 뒤집기 ###### 문제 설명문자열 my_string과 이차원 정수 배열 queries가 매개변수로 주어집니다. queries의 원소는 [s, e] 형태로, my_string의 인덱스 s부터 인덱스 e까지를 뒤집으라는 의미입니다. my_string에 queries의 명령을 순서대로 처리한 후의 문자열을 return 하는 solution 함수를 작성해 주세요.제한사항  my_string은 영소문자로만 이루어져 있습니다.  1 ≤ my_string의 길이 ≤ 1,000  queries의 원소는 [s, e]의 형태로 0 ≤ s ≤ e &lt; my_string의 길이를 만족합니다.  1 ≤ queries의 길이 ≤ 1,000입출력 예            my_string      queries      result                  “rermgorpsam”      [[2, 3], [0, 7], [5, 9], [6, 10]]      “programmers”      입출력 예 설명      예제 1번의 my_string은 “rermgorpsam”이고 주어진 queries를 순서대로 처리하면 다음과 같습니다.                            queries          my_string                                                 “rermgorpsam”                          [2, 3]          “remrgorpsam”                          [0, 7]          “progrmersam”                          [5, 9]          “prograsremm”                          [6, 10]          “programmers”                      따라서 “programmers”를 return 합니다.  Solution  처음 풀이는 조금 복잡했습니다. 먼저 my_string을 배열로 만들고, queries에 reduce(into: array)를 사용해서 arr.reversed()를 써서 arr안의 요소들을 뒤집어 주는 방식을 사용했습니다.import Foundationfunc solution(_ my_string:String, _ queries:[[Int]]) -&gt; String {    var array = Array(my_string)    let result = queries.reduce(into: array) { arr, q in        let (s, e) = (q[0], q[1])        let reversedArray = Array(arr[s...e].reversed())        for i in s...e{            arr[i] = reversedArray[i-s]        }            }    return String(result)}  원리는 동일하지만 .reverse() 함수를 알게되어 아래와 같이 코드를 조금 다듬었습니다.func solution(_ my_string:String, _ queries:[[Int]]) -&gt; String {\tvar array = Array(my_string)    let result = queries.reduce(into: array) { arr, q in        arr[q[0]...q[1]].reverse()    }    return String(result)}"
  },
  
  {
    "title": "Basic39 9로 나눈 나머지",
    "url": "/posts/ProgrammersBasic-39/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-01-23 00:00:00 +0900",
    





    
    "snippet": "문제: 9로 나눈 나머지문제 설명음이 아닌 정수를 9로 나눈 나머지는 그 정수의 각 자리 숫자의 합을 9로 나눈 나머지와 같은 것이 알려져 있습니다.이 사실을 이용하여 음이 아닌 정수가 문자열 number로 주어질 때, 이 정수를 9로 나눈 나머지를 return 하는 solution 함수를 작성해주세요.제한사항  1 ≤ number의 길이 ≤ 100,...",
    "content": "문제: 9로 나눈 나머지문제 설명음이 아닌 정수를 9로 나눈 나머지는 그 정수의 각 자리 숫자의 합을 9로 나눈 나머지와 같은 것이 알려져 있습니다.이 사실을 이용하여 음이 아닌 정수가 문자열 number로 주어질 때, 이 정수를 9로 나눈 나머지를 return 하는 solution 함수를 작성해주세요.제한사항  1 ≤ number의 길이 ≤ 100,000  number의 원소는 숫자로만 이루어져 있습니다.  number는 정수 0이 아니라면 숫자 ‘0’으로 시작하지 않습니다.입출력 예            number      result                  “123”      6              “78720646226947352489”      2      입출력 예 설명입출력 예 #1  예제 1번의 number는 123으로 각 자리 숫자의 합은 6입니다. 6을 9로 나눈 나머지는 6이고, 실제로 123 = 9 × 13 + 6입니다. 따라서 6을 return 합니다.입출력 예 #2  예제 2번의 number는 78720646226947352489으로 각자리 숫자의 합은 101입니다. 101을 9로 나눈 나머지는 2이고, 실제로 78720646226947352489 = 9 × 8746738469660816943 + 2입니다. 따라서 2를 return 합니다.Solution  처음에는 Int(number) % 9를 써봤지만, 큰 숫자가 들어왔을 때 Int에 overflow가 일어나면서 nil을 반환하여 오류가 나는 것을 확인했습니다. 문제의 조건대로 각 자리숫자의 합을 구하고 %연산자로 처리했습니다.import Foundationfunc solution(_ number:String) -&gt; Int {    return number.reduce(0){$0 + Int(String($1))!} % 9}"
  },
  
  {
    "title": "Basic38 글자 이어 붙여 문자열 만들기",
    "url": "/posts/ProgrammersBasic-38/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-01-23 00:00:00 +0900",
    





    
    "snippet": "문제: 글자 이어 붙여 문자열 만들기문제 설명문자열 my_string과 정수 배열 index_list가 매개변수로 주어집니다. my_string의 index_list의 원소들에 해당하는 인덱스의 글자들을 순서대로 이어 붙인 문자열을 return 하는 solution 함수를 작성해 주세요.제한사항  1 ≤ my_string의 길이 ≤ 1,000  my_...",
    "content": "문제: 글자 이어 붙여 문자열 만들기문제 설명문자열 my_string과 정수 배열 index_list가 매개변수로 주어집니다. my_string의 index_list의 원소들에 해당하는 인덱스의 글자들을 순서대로 이어 붙인 문자열을 return 하는 solution 함수를 작성해 주세요.제한사항  1 ≤ my_string의 길이 ≤ 1,000  my_string의 원소는 영소문자로 이루어져 있습니다.  1 ≤ index_list의 길이 ≤ 1,000  0 ≤ index_list의 원소 &lt; my_string의 길이입출력 예            my_string      index_list      result                  “cvsgiorszzzmrpaqpe”      [16, 6, 5, 3, 12, 14, 11, 11, 17, 12, 7]      “programmers”              “zpiaz”      [1, 2, 0, 0, 3]      “pizza”      입출력 예 설명입출력 예 #1  예제 1번의 my_string에서 인덱스 3, 5, 6, 11, 12, 14, 16, 17에 해당하는 글자는 각각 g, o, r, m, r, a, p, e이므로 my_string에서 index_list에 들어있는 원소에 해당하는 인덱스의 글자들은 각각 순서대로 p, r, o, g, r, a, m, m, e, r, s입니다. 따라서 “programmers”를 return 합니다.입출력 예 #2  예제 2번의 my_string에서 인덱스 0, 1, 2, 3에 해당하는 글자는 각각 z, p, i, a이므로 my_string에서 index_list에 들어있는 원소에 해당하는 인덱스의 글자들은 각각 순서대로 p, i, z, z, a입니다. 따라서 “pizza”를 return 합니다.Solutionimport Foundationfunc solution(_ my_string:String, _ index_list:[Int]) -&gt; String {        let array = Array(my_string)    return index_list.map{ String(array[$0]) }.joined()}"
  },
  
  {
    "title": "Basic37 주사위 게임 3",
    "url": "/posts/ProgrammersBasic-37/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-01-23 00:00:00 +0900",
    





    
    "snippet": "문제: 주사위 게임 3문제 설명1부터 6까지 숫자가 적힌 주사위가 네 개 있습니다. 네 주사위를 굴렸을 때 나온 숫자에 따라 다음과 같은 점수를 얻습니다.  네 주사위에서 나온 숫자가 모두 p로 같다면 1111 × p점을 얻습니다.  세 주사위에서 나온 숫자가 p로 같고 나머지 다른 주사위에서 나온 숫자가 q(p ≠ q)라면 (10 × p + q)2 ...",
    "content": "문제: 주사위 게임 3문제 설명1부터 6까지 숫자가 적힌 주사위가 네 개 있습니다. 네 주사위를 굴렸을 때 나온 숫자에 따라 다음과 같은 점수를 얻습니다.  네 주사위에서 나온 숫자가 모두 p로 같다면 1111 × p점을 얻습니다.  세 주사위에서 나온 숫자가 p로 같고 나머지 다른 주사위에서 나온 숫자가 q(p ≠ q)라면 (10 × p + q)2 점을 얻습니다.                              주사위가 두 개씩 같은 값이 나오고, 나온 숫자를 각각 p, q(p ≠ q)라고 한다면 (p + q) ×          p - q          점을 얻습니다.                      어느 두 주사위에서 나온 숫자가 p로 같고 나머지 두 주사위에서 나온 숫자가 각각 p와 다른 q, r(q ≠ r)이라면 q × r점을 얻습니다.  네 주사위에 적힌 숫자가 모두 다르다면 나온 숫자 중 가장 작은 숫자 만큼의 점수를 얻습니다.네 주사위를 굴렸을 때 나온 숫자가 정수 매개변수 a, b, c, d로 주어질 때, 얻는 점수를 return 하는 solution 함수를 작성해 주세요.제한사항  a, b, c, d는 1 이상 6 이하의 정수입니다.입출력 예            a      b      c      d      result                  2      2      2      2      2222              4      1      4      4      1681              6      3      3      6      27              2      5      2      6      30              6      4      2      5      2      입출력 예 설명입출력 예 #1  예제 1번에서 네 주사위 숫자가 모두 2로 같으므로 1111 × 2 = 2222점을 얻습니다. 따라서 2222를 return 합니다.입출력 예 #2  예제 2번에서 세 주사위에서 나온 숫자가 4로 같고 나머지 다른 주사위에서 나온 숫자가 1이므로 (10 × 4 + 1)2 = 412 = 1681점을 얻습니다. 따라서 1681을 return 합니다.입출력 예 #3                              예제 3번에서 a, d는 6으로, b, c는 3으로 각각 같으므로 (6 + 3) ×          6 - 3          = 9 × 3 = 27점을 얻습니다. 따라서 27을 return 합니다.                    입출력 예 #4  예제 4번에서 두 주사위에서 2가 나오고 나머지 다른 두 주사위에서 각각 5, 6이 나왔으므로 5 × 6 = 30점을 얻습니다. 따라서 30을 return 합니다.입출력 예 #5  예제 5번에서 네 주사위 숫자가 모두 다르고 나온 숫자 중 가장 작은 숫자가 2이므로 2점을 얻습니다. 따라서 2를 return 합니다.Solution  Array를 만들어 정렬시키고, Set을 만들어줍니다. Set.count를 통해서 중복된 숫자의 경우의 수를 나눌 수 있습니다. case 2의 경우 a,b,c,d중 세개의 숫자가 같은 경우와, 두개씩 같은 경우 두가지가 있습니다. 여기서 세개의 숫자가 같은 경우는 배열을 정렬시켰기 때문에 [2,2,2,5] or [4,6,6,6,]처럼 배열의 0번째와 1번째 값이 다른경우 or 2번째와 3번째가 다른경우로 나뉘어집니다. 이를 제외한 나머지의 경우는 숫자가 두개씩 같은경우가 됩니다.case 3은 두개의 숫자가 같고 나머지는 전부 다른 경우입니다. filter를 사용해서 두개의 값이 같은 원소를 찾아내고(p), 한번 더 필터를 사용해서 p를 제외한 나머지 두개의 요소를 찾아낸 후에, 조건대로 곱해서 return합니다.import Foundationfunc solution(_ a:Int, _ b:Int, _ c:Int, _ d:Int) -&gt; Int {    let array = [a,b,c,d].sorted()    let s = Set(array)    switch s.count {        case 1 :            return 1111 * a        case 2 :            if array[0] != array[1] {                return (10*array[1]+array[0]) * (10*array[1]+array[0])            }            else if array[2] != array[3] {                return (10*array[2]+array[3]) * (10*array[2]+array[3])            }            else {                return (array[1] + array[2]) * abs(array[1] - array[2])            }        case 3 :            let tmp = array.enumerated().filter{index, value in                let nextIndex = index + 1                return nextIndex &lt; array.count &amp;&amp; array[nextIndex] == value            }            let p = tmp.map{$0.element}[0]            let last = s.filter{ $0 != p}                        return last.reduce(1){$0*$1}        case 4 :            return s.min() ?? 0        default :            return -1    }}"
  },
  
  {
    "title": "Basic36 간단한 논리 연산",
    "url": "/posts/ProgrammersBasic-36/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-01-23 00:00:00 +0900",
    





    
    "snippet": "문제: 간단한 논리 연산문제 설명boolean 변수 x1, x2, x3, x4가 매개변수로 주어질 때, 다음의 식의 true/false를 return 하는 solution 함수를 작성해 주세요.  (x1 ∨ x2) ∧ (x3 ∨ x4)입출력 예            x1      x2      x3      x4      result           ...",
    "content": "문제: 간단한 논리 연산문제 설명boolean 변수 x1, x2, x3, x4가 매개변수로 주어질 때, 다음의 식의 true/false를 return 하는 solution 함수를 작성해 주세요.  (x1 ∨ x2) ∧ (x3 ∨ x4)입출력 예            x1      x2      x3      x4      result                  false      true      true      true      true              true      false      false      false      false      입출력 예 설명입출력 예 #1      예제 1번의 x1, x2, x3, x4로 식을 계산하면 다음과 같습니다.    (x1 ∨ x2) ∧ (x3 ∨ x4) ≡ (F ∨ T) ∧ (T ∨ T) ≡ T ∧ T ≡ T    따라서 true를 return 합니다.  입출력 예 #2      예제 2번의 x1, x2, x3, x4로 식을 계산하면 다음과 같습니다.    (x1 ∨ x2) ∧ (x3 ∨ x4) ≡ (T ∨ F) ∧ (F ∨ F) ≡ T ∧ F ≡ F    따라서 false를 return 합니다.        ∨과 ∧의 진리표는 다음과 같습니다.                            x          y          x ∨ y          x ∧ y                                      T          T          T          T                          T          F          T          F                          F          T          T          F                          F          F          F          F                    Solutionimport Foundationfunc solution(_ x1:Bool, _ x2:Bool, _ x3:Bool, _ x4:Bool) -&gt; Bool {    return (x1 || x2) &amp;&amp; (x3 || x4)}"
  },
  
  {
    "title": "Basic35 배열 만들기 4",
    "url": "/posts/ProgrammersBasic-35/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-01-22 00:00:00 +0900",
    





    
    "snippet": "문제: 배열 만들기 4문제 설명정수 배열 arr가 주어집니다. arr를 이용해 새로운 배열 stk를 만드려고 합니다.변수 i를 만들어 초기값을 0으로 설정한 후 i가 arr의 길이보다 작으면 다음 작업을 반복합니다.  만약 stk가 빈 배열이라면 arr[i]를 stk에 추가하고 i에 1을 더합니다.  stk에 원소가 있고, stk의 마지막 원소가 ar...",
    "content": "문제: 배열 만들기 4문제 설명정수 배열 arr가 주어집니다. arr를 이용해 새로운 배열 stk를 만드려고 합니다.변수 i를 만들어 초기값을 0으로 설정한 후 i가 arr의 길이보다 작으면 다음 작업을 반복합니다.  만약 stk가 빈 배열이라면 arr[i]를 stk에 추가하고 i에 1을 더합니다.  stk에 원소가 있고, stk의 마지막 원소가 arr[i]보다 작으면 arr[i]를 stk의 뒤에 추가하고 i에 1을 더합니다.  stk에 원소가 있는데 stk의 마지막 원소가 arr[i]보다 크거나 같으면 stk의 마지막 원소를 stk에서 제거합니다.위 작업을 마친 후 만들어진 stk를 return 하는 solution 함수를 완성해 주세요.제한사항  1 ≤ arr의 길이 ≤ 100,000          1 ≤ arr의 원소 ≤ 100,000      입출력 예            arr      result                  [1, 4, 2, 5, 3]      [1, 2, 3]      입출력 예 설명입출력 예 #1  각 작업을 마친 후에 배열의 변화를 나타내면 다음 표와 같습니다.            i      arr[i]      stk                  0      1      []              1      4      [1]              2      2      [1, 4]              2      2      [1]              3      5      [1, 2]              4      3      [1, 2, 5]              4      3      [1, 2]              -      -      [1, 2, 3]        따라서 [1, 2, 3]을 return 합니다.Solutionimport Foundationfunc solution(_ arr:[Int]) -&gt; [Int] {    var stk = [Int]()    var i = 0    while i &lt; arr.count {        if stk.isEmpty {            stk.append(arr[i])            i += 1        }        else if stk.last! &lt; arr[i] {            stk.append(arr[i])            i += 1        }        else {            stk.removeLast()        }    }        return stk}"
  },
  
  {
    "title": "Basic34 콜라츠 수열 만들기",
    "url": "/posts/ProgrammersBasic-34/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-01-22 00:00:00 +0900",
    





    
    "snippet": "문제: 콜라츠 수열 만들기문제 설명모든 자연수 x에 대해서 현재 값이 x이면 x가 짝수일 때는 2로 나누고, x가 홀수일 때는 3 * x + 1로 바꾸는 계산을 계속해서 반복하면 언젠가는 반드시  x가 1이 되는지 묻는 문제를 콜라츠 문제라고 부릅니다.그리고 위 과정에서 거쳐간 모든 수를 기록한 수열을 콜라츠 수열이라고 부릅니다.계산 결과 1,000 ...",
    "content": "문제: 콜라츠 수열 만들기문제 설명모든 자연수 x에 대해서 현재 값이 x이면 x가 짝수일 때는 2로 나누고, x가 홀수일 때는 3 * x + 1로 바꾸는 계산을 계속해서 반복하면 언젠가는 반드시  x가 1이 되는지 묻는 문제를 콜라츠 문제라고 부릅니다.그리고 위 과정에서 거쳐간 모든 수를 기록한 수열을 콜라츠 수열이라고 부릅니다.계산 결과 1,000 보다 작거나 같은 수에 대해서는 전부 언젠가 1에 도달한다는 것이 알려져 있습니다. 임의의 1,000 보다 작거나 같은 양의 정수 n이 주어질 때 초기값이 n인 콜라츠 수열을 return 하는 solution 함수를 완성해 주세요.제한사항  1 ≤ n ≤ 1,000입출력 예            n      result                  10      [10, 5, 16, 8, 4, 2, 1]      입출력 예 설명입출력 예 #1  순서대로 연산한 결과를 표로 만들면 다음과 같습니다.            연산 횟수      x      홀짝 여부                  0      10      짝수              1      5      홀수              2      16      짝수              3      8      짝수              4      4      짝수              5      2      짝수              6      1      홀수        따라서 [10, 5, 16, 8, 4, 2, 1]을 return 합니다.Solutionimport Foundationfunc solution(_ n:Int) -&gt; [Int] {    var result = [n]    var current = n        while current != 1 {        if current % 2 == 0 {            current = current / 2        }        else {            current = current*3+1        }        result.append(current)    }    return result}"
  },
  
  {
    "title": "Basic33 카운트 업",
    "url": "/posts/ProgrammersBasic-33/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-01-22 00:00:00 +0900",
    





    
    "snippet": "문제: 카운트 업문제 설명정수 start_num와 end_num가 주어질 때, start_num부터 end_num까지의 숫자를 차례로 담은 리스트를 return하도록 solution 함수를 완성해주세요.제한사항  0 ≤ start_num ≤ end_num ≤ 50입출력 예            start_num      end_num      resul...",
    "content": "문제: 카운트 업문제 설명정수 start_num와 end_num가 주어질 때, start_num부터 end_num까지의 숫자를 차례로 담은 리스트를 return하도록 solution 함수를 완성해주세요.제한사항  0 ≤ start_num ≤ end_num ≤ 50입출력 예            start_num      end_num      result                  3      10      [3, 4, 5, 6, 7, 8, 9, 10]      입출력 예 설명입출력 예 #1  3부터 10까지의 숫자들을 담은 리스트 [3, 4, 5, 6, 7, 8, 9, 10]를 return합니다.Solutionimport Foundationfunc solution(_ start_num:Int, _ end_num:Int) -&gt; [Int] {    return (start_num...end_num).map{$0}}"
  },
  
  {
    "title": "Basic32 배열 만들기 2",
    "url": "/posts/ProgrammersBasic-32/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-01-20 00:00:00 +0900",
    





    
    "snippet": "문제: 배열 만들기 2문제 설명정수 l과 r이 주어졌을 때, l 이상 r이하의 정수 중에서 숫자 “0”과 “5”로만 이루어진 모든 정수를 오름차순으로 저장한 배열을 return 하는 solution 함수를 완성해 주세요.만약 그러한 정수가 없다면, -1이 담긴 배열을 return 합니다.제한사항  1 ≤ l ≤ r ≤ 1,000,000입출력 예    ...",
    "content": "문제: 배열 만들기 2문제 설명정수 l과 r이 주어졌을 때, l 이상 r이하의 정수 중에서 숫자 “0”과 “5”로만 이루어진 모든 정수를 오름차순으로 저장한 배열을 return 하는 solution 함수를 완성해 주세요.만약 그러한 정수가 없다면, -1이 담긴 배열을 return 합니다.제한사항  1 ≤ l ≤ r ≤ 1,000,000입출력 예            l      r      result                  5      555      [5, 50, 55, 500, 505, 550, 555]              10      20      [-1]      입출력 예 설명입출력 예 #1  5 이상 555 이하의 0과 5로만 이루어진 정수는 작은 수부터 5, 50, 55, 500, 505, 550, 555가 있습니다. 따라서 [5, 50, 55, 500, 505, 550, 555]를 return 합니다.입출력 예 #2  10 이상 20 이하이면서 0과 5로만 이루어진 정수는 없습니다. 따라서 [-1]을 return 합니다.Solution  String으로 변환한 l부터 r까지 숫자를 하나씩 돌면서 \"0\",\"5\"를 제외한 숫자가 포함되어 있지 않을 경우에만 result배열에 추가하는 방식으로 문제를 풀었습니다. 그러나 처음에 테스트케이스 하나에서 시간초과라는 결과가 나왔습니다.import Foundationfunc solution(_ l:Int, _ r:Int) -&gt; [Int] {    let arr = [\"1\",\"2\",\"3\",\"4\",\"6\",\"7\",\"8\",\"9\"]    var result = [Int]()        for i in l...r {        let iString = String(i)\t\tif arr.filter{iString.contains($0)}.count == 0 {\t\t\tresult.append(i)\t\t}    }        return result.isEmpty ? [-1] : result}  그래서 if i%5 == 0 를 추가해 줌으로써 i가 5의 배수일 때만 filter를 실행시키도록 하여, 검사 수를 줄여서 시간초과를 해결했습니다.import Foundationfunc solution(_ l:Int, _ r:Int) -&gt; [Int] {    let arr = [\"1\",\"2\",\"3\",\"4\",\"6\",\"7\",\"8\",\"9\"]    var result = [Int]()        for i in l...r {        let iString = String(i)        if i%5 == 0 {            if arr.filter{iString.contains($0)}.count == 0 {                result.append(i)            }        }    }        return result.isEmpty ? [-1] : result}  아래 코드는 다른사람이 작성한 효율적인 코드입니다. 먼저, 처음 문제를 풀 때 for문이 아니라 l...r을 이용해 문제를 풀려고 접근했었는데, [l...r]이 코드를 작성하는 실수를 했습니다. [l...r]은 (l...r)과 다르게 ClosedRange로 map을 사용했을때 오류가 발생했습니다.  또한 Set을 사용할 생각은 하지 못했고, isSubset도 알지 못했는데, 이부분을 예시를 들어 해석하자면 \"505\"를 Set으로 변형시켜서 [\"5\",\"0\"]으로 변형하고, isSubset(of:[\"5\",\"0\"])는 앞의 \"505\"의 Set이 (of: )의 Set을 Subset으로 갖는지를 판별해주는 함수입니다.func solution(_ l:Int, _ r:Int) -&gt; [Int] {    let result = (l...r).map{$0}.filter{Set(String($0)).isSubset(of:[\"5\",\"0\"])}    return result.isEmpty ? [-1] : result}"
  },
  
  {
    "title": "Basic31 수열과 구간 쿼리 4",
    "url": "/posts/ProgrammersBasic-31/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-01-19 00:00:00 +0900",
    





    
    "snippet": "문제: 수열과 구간 쿼리 4문제 설명정수 배열 arr와 2차원 정수 배열 queries이 주어집니다. queries의 원소는 각각 하나의 query를 나타내며, [s, e, k] 꼴입니다.각 query마다 순서대로 s ≤ i ≤ e인 모든 i에 대해 i가 k의 배수이면 arr[i]에 1을 더합니다.위 규칙에 따라 queries를 처리한 이후의 arr를...",
    "content": "문제: 수열과 구간 쿼리 4문제 설명정수 배열 arr와 2차원 정수 배열 queries이 주어집니다. queries의 원소는 각각 하나의 query를 나타내며, [s, e, k] 꼴입니다.각 query마다 순서대로 s ≤ i ≤ e인 모든 i에 대해 i가 k의 배수이면 arr[i]에 1을 더합니다.위 규칙에 따라 queries를 처리한 이후의 arr를 return 하는 solution 함수를 완성해 주세요.제한사항  1 ≤ arr의 길이 ≤ 1,000          0 ≤ arr의 원소 ≤ 1,000,000        1 ≤ queries의 길이 ≤ 1,000          0 ≤ s ≤ e &lt; arr의 길이      0 ≤ k ≤ 5      입출력 예            arr      queries      result                  [0, 1, 2, 4, 3]      [[0, 4, 1],[0, 3, 2],[0, 3, 3]]      [3, 2, 4, 6, 4]      입출력 예 설명입출력 예 #1  각 쿼리에 따라 arr가 다음과 같이 변합니다.            arr                  [0, 1, 2, 4, 3]              [1, 2, 3, 5, 4]              [2, 2, 4, 5, 4]              [3, 2, 4, 6, 4]        따라서 [3, 2, 4, 6, 4]를 return 합니다.Solution  지난번에 공부했던 reduec(into)와 map을 사용해서 문제를 풀어봤습니다.import Foundationfunc solution(_ arr:[Int], _ queries:[[Int]]) -&gt; [Int] {    return queries.reduce(into: arr) { result, q in        result = result.enumerated().map{index, value in              index &gt;= q[0] &amp;&amp; index&lt;=q[1] &amp;&amp; index % q[2] == 0 ? value+1 : value        }    }}"
  },
  
  {
    "title": "Basic30 수열과 구간 쿼리 2",
    "url": "/posts/ProgrammersBasic-30/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-01-18 00:00:00 +0900",
    





    
    "snippet": "문제: 수열과 구간 쿼리 2문제 설명정수 배열 arr와 2차원 정수 배열 queries이 주어집니다. queries의 원소는 각각 하나의 query를 나타내며, [s, e, k] 꼴입니다.각 query마다 순서대로 s ≤ i ≤ e인 모든 i에 대해 k보다 크면서 가장 작은 arr[i]를 찾습니다.각 쿼리의 순서에 맞게 답을 저장한 배열을 반환하는 s...",
    "content": "문제: 수열과 구간 쿼리 2문제 설명정수 배열 arr와 2차원 정수 배열 queries이 주어집니다. queries의 원소는 각각 하나의 query를 나타내며, [s, e, k] 꼴입니다.각 query마다 순서대로 s ≤ i ≤ e인 모든 i에 대해 k보다 크면서 가장 작은 arr[i]를 찾습니다.각 쿼리의 순서에 맞게 답을 저장한 배열을 반환하는 solution 함수를 완성해 주세요.단, 특정 쿼리의 답이 존재하지 않으면 -1을 저장합니다.제한사항  1 ≤ arr의 길이 ≤ 1,000          0 ≤ arr의 원소 ≤ 1,000,000        1 ≤ queries의 길이 ≤ 1,000          0 ≤ s ≤ e &lt; arr의 길이      0 ≤ k ≤ 1,000,000      입출력 예            arr      queries      result                  [0, 1, 2, 4, 3]      [[0, 4, 2],[0, 3, 2],[0, 2, 2]]      [3, 4, -1]      입출력 예 설명입출력 예 #1  첫 번째 쿼리의 범위에는 0, 1, 2, 4, 3이 있으며 이 중 2보다 크면서 가장 작은 값은 3입니다.  두 번째 쿼리의 범위에는 0, 1, 2, 4가 있으며 이 중 2보다 크면서 가장 작은 값은 4입니다.  세 번째 쿼리의 범위에는 0, 1, 2가 있으며 여기에는 2보다 큰 값이 없습니다.  따라서 [3, 4, -1]을 return 합니다.Solutionimport Foundationfunc solution(_ arr:[Int], _ queries:[[Int]]) -&gt; [Int] {    var tempArray = [Int]()    var result = [Int]()        for i in 0..&lt;queries.count {        for j in queries[i][0]...queries[i][1] {            if arr[j] &gt; queries[i][2] {                tempArray.append(arr[j])            }        }        tempArray.isEmpty ? result.append(-1) : result.append(tempArray.min() ?? -1)        tempArray = []    }        return result}  map과 filter를 사용해서 코드를 줄인 방법도 있습니다.func solution(_ arr:[Int], _ queries:[[Int]]) -&gt; [Int] {    let result = queries.map {        let (s, e, k) = ($0[0], $0[1], $0[2])        return arr[s...e].filter{$0 &gt; k}.min() ?? -1    }    return result}"
  },
  
  {
    "title": "Basic29 수열과 구간 쿼리 3",
    "url": "/posts/ProgrammersBasic-29/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-01-17 00:00:00 +0900",
    





    
    "snippet": "문제: 수열과 구간 쿼리 3문제 설명정수 배열 arr와 2차원 정수 배열 queries이 주어집니다. queries의 원소는 각각 하나의 query를 나타내며, [i, j] 꼴입니다.각 query마다 순서대로 arr[i]의 값과 arr[j]의 값을 서로 바꿉니다.위 규칙에 따라 queries를 처리한 이후의 arr를 return 하는 solution ...",
    "content": "문제: 수열과 구간 쿼리 3문제 설명정수 배열 arr와 2차원 정수 배열 queries이 주어집니다. queries의 원소는 각각 하나의 query를 나타내며, [i, j] 꼴입니다.각 query마다 순서대로 arr[i]의 값과 arr[j]의 값을 서로 바꿉니다.위 규칙에 따라 queries를 처리한 이후의 arr를 return 하는 solution 함수를 완성해 주세요.제한사항  1 ≤ arr의 길이 ≤ 1,000          0 ≤ arr의 원소 ≤ 1,000,000        1 ≤ queries의 길이 ≤ 1,000          0 ≤ i &lt; j &lt; arr의 길이      입출력 예            arr      queries      result                  [0, 1, 2, 3, 4]      [[0, 3],[1, 2],[1, 4]]      [3, 4, 1, 0, 2]      입출력 예 설명입출력 예 #1  각 쿼리에 따라 arr가 다음과 같이 변합니다.            arr                  [0, 1, 2, 3, 4]              [3, 1, 2, 0, 4]              [3, 2, 1, 0, 4]              [3, 4, 1, 0, 2]        따라서 [3, 4, 1, 0, 2]를 return 합니다.Solution  처음 map을 사용하고, swap로직을 직접 구현해서 문제를 풀었습니다.import Foundationfunc solution(_ arr:[Int], _ queries:[[Int]]) -&gt; [Int] {    var array = arr    queries.map {        let tmp = array[$0[0]]        array[$0[0]] = array[$0[1]]        array[$0[1]] = tmp    }        return array}  이후 swapAt 이라는 함수가 있는 것을 알게 되었습니다. swapAt은 swapAt(_ i, _j)의 형태로 사용되고, i, j는 인덱스입니다. 배열안의 각 인덱스의 값을 서로 바꾸어주는 함수입니다.func solution(_ arr:[Int], _ queries:[[Int]]) -&gt; [Int] {    var array = arr    queries.map {        array.swapAt($0[0], $0[1])    }    return array}  reduce(into:_:)\u001c를 이용한 풀이도 있습니다. 공식 문서를 보면 reduce(into:_:)는 reduce(::)와 다르게 inout 키워드가 붙은 Result를 받습니다. 따라서 초기값으로 넘기는 인자를 변형하여 결과를 얻고 싶다면, reduce(into:_:)를 사용할 수 있습니다.func solution(_ arr:[Int], _ queries:[[Int]]) -&gt; [Int] {    return queries.reduce(into: arr) { result, q in        print(result, q)        result.swapAt(q[0], q[1])    }}"
  },
  
  {
    "title": "Basic28 수 조작하기 2",
    "url": "/posts/ProgrammersBasic-28/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-01-16 00:00:00 +0900",
    





    
    "snippet": "문제: 수 조작하기 2문제 설명정수 배열 numLog가 주어집니다. 처음에 numLog[0]에서 부터 시작해 “w”, “a”, “s”, “d”로 이루어진 문자열을 입력으로 받아 순서대로 다음과 같은 조작을 했다고 합시다.  “w” : 수에 1을 더한다.  ”s” : 수에 1을 뺀다.  “d” : 수에 10을 더한다.  “a” : 수에 10을 뺀다.그리...",
    "content": "문제: 수 조작하기 2문제 설명정수 배열 numLog가 주어집니다. 처음에 numLog[0]에서 부터 시작해 “w”, “a”, “s”, “d”로 이루어진 문자열을 입력으로 받아 순서대로 다음과 같은 조작을 했다고 합시다.  “w” : 수에 1을 더한다.  ”s” : 수에 1을 뺀다.  “d” : 수에 10을 더한다.  “a” : 수에 10을 뺀다.그리고 매번 조작을 할 때마다 결괏값을 기록한 정수 배열이 numLog입니다. 즉, numLog[i]는 numLog[0]로부터 총 i번의 조작을 가한 결과가 저장되어 있습니다.주어진 정수 배열 numLog에 대해 조작을 위해 입력받은 문자열을 return 하는 solution 함수를 완성해 주세요.제한사항  2 ≤ numLog의 길이 ≤ 100,000          -100,000 ≤ numLog[0] ≤ 100,000      1 ≤ i ≤ numLog의 길이인 모든 i에 대해 |numLog[i] - numLog[i - 1]|의 값은 1 또는 10입니다.      입출력 예            numLog      result                  [0, 1, 0, 10, 0, 1, 0, 10, 0, -1, -2, -1]      “wsdawsdassw”      입출력 예 설명입출력 예 #1  result인 “wsdawsdassw”를 따라 numLog[0]에서부터 시작해 조작을 하면 numLog의 값과 순서대로 일치합니다. 따라서 “wsdawsdassw”를 return 합니다.Hint“수 조작하기 1” 문제의 n값이 numLog[0]에 해당하며, 이 문제에서 주어진 numLog에 따라 “수 조작하기 1” 문제의 control을 구하는 문제라고 이해할 수 있습니다.입출력 예 #1은 “수 조작하기 1” 문제의 입출력 예 #1과 같은 예시이므로 참고하시기 바랍니다.Solution  switch case를 이용해 문제를 풀었습니다.import Foundationfunc solution(_ numLog:[Int]) -&gt; String {    var result = \"\"    for i in 0..&lt;numLog.count-1 {        switch numLog[i+1] - numLog[i] {            case 1:                result += \"w\"                break            case -1:                result += \"s\"                break            case 10:                result += \"d\"                break            case -10:                result += \"a\"                break            default :                break        }    }    return result}"
  },
  
  {
    "title": "Basic27 수 조작하기 1",
    "url": "/posts/ProgrammersBasic-27/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-01-16 00:00:00 +0900",
    





    
    "snippet": "문제: 수 조작하기 1문제 설명정수 n과 문자열 control이 주어집니다. control은 “w”, “a”, “s”, “d”의 4개의 문자로 이루어져 있으며, control의 앞에서부터 순서대로 문자에 따라 n의 값을 바꿉니다.  “w” : n이 1 커집니다.  ”s” : n이 1 작아집니다.  “d” : n이 10 커집니다.  “a” : n이 10...",
    "content": "문제: 수 조작하기 1문제 설명정수 n과 문자열 control이 주어집니다. control은 “w”, “a”, “s”, “d”의 4개의 문자로 이루어져 있으며, control의 앞에서부터 순서대로 문자에 따라 n의 값을 바꿉니다.  “w” : n이 1 커집니다.  ”s” : n이 1 작아집니다.  “d” : n이 10 커집니다.  “a” : n이 10 작아집니다.위 규칙에 따라 n을 바꿨을 때 가장 마지막에 나오는 n의 값을 return 하는 solution 함수를 완성해 주세요.제한사항  -100,000 ≤ n ≤ 100,000  1 ≤ control의 길이 ≤ 100,000          control은 알파벳 소문자 “w”, “a”, “s”, “d”로 이루어진 문자열입니다.      입출력 예            n      control      result                  0      “wsdawsdassw”      -1      입출력 예 설명입출력 예 #1  수 n은 control에 따라 다음과 같은 순서로 변하게 됩니다.  0 → 1 → 0 → 10 → 0 → 1 → 0 → 10 → 0 → -1 → -2 → -1  따라서 -1을 return 합니다.Solution  switch case를 사용해서 문제를 풀었습니다.import Foundationfunc solution(_ n:Int, _ control:String) -&gt; Int {    var result = n    let controllArray = Array(control)        for sign in controllArray {        switch sign {            case \"w\":                 result += 1                break            case \"s\":                 result -= 1                break            case \"d\":                 result += 10                break            case \"a\":                 result -= 10                break            default:                 break        }    }        return result}"
  },
  
  {
    "title": "Basic26 마지막 두 원소",
    "url": "/posts/ProgrammersBasic-26/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-01-15 00:00:00 +0900",
    





    
    "snippet": "문제: 마지막 두 원소문제 설명정수 리스트 num_list가 주어질 때, 마지막 원소가 그전 원소보다 크면 마지막 원소에서 그전 원소를 뺀 값을 마지막 원소가 그전 원소보다 크지 않다면 마지막 원소를 두 배한 값을 추가하여 return하도록 solution 함수를 완성해주세요.제한사항  2 ≤ num_list의 길이 ≤ 10  1 ≤ num_list의...",
    "content": "문제: 마지막 두 원소문제 설명정수 리스트 num_list가 주어질 때, 마지막 원소가 그전 원소보다 크면 마지막 원소에서 그전 원소를 뺀 값을 마지막 원소가 그전 원소보다 크지 않다면 마지막 원소를 두 배한 값을 추가하여 return하도록 solution 함수를 완성해주세요.제한사항  2 ≤ num_list의 길이 ≤ 10  1 ≤ num_list의 원소 ≤ 9입출력 예            num_list      result                  [2, 1, 6]      [2, 1, 6, 5]              [5, 2, 1, 7, 5]      [5, 2, 1, 7, 5, 10]      입출력 예 설명입출력 예 #1  마지막 원소인 6이 그전 원소인 1보다 크기 때문에 6 - 1인 5를 추가해 return합니다.입출력 예 #2  마지막 원소인 5가 그전 원소인 7보다 크지 않기 때문에 5의 두 배인 10을 추가해 return합니다.Solutionimport Foundationfunc solution(_ num_list:[Int]) -&gt; [Int] {    var result = num_list    let lastElement = num_list[num_list.count - 1]    let beforeLastElement = num_list[num_list.count - 2]        result.append(lastElement &gt; beforeLastElement ? lastElement - beforeLastElement : lastElement * 2)    return result}"
  },
  
  {
    "title": "Basic25 이어 붙인 수",
    "url": "/posts/ProgrammersBasic-25/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-01-15 00:00:00 +0900",
    





    
    "snippet": "문제: 이어 붙인 수문제 설명정수가 담긴 리스트 num_list가 주어집니다. num_list의 홀수만 순서대로 이어 붙인 수와 짝수만 순서대로 이어 붙인 수의 합을 return하도록 solution 함수를 완성해주세요.제한사항  2 ≤ num_list의 길이 ≤ 10  1 ≤ num_list의 원소 ≤ 9  num_list에는 적어도 한 개씩의 짝수...",
    "content": "문제: 이어 붙인 수문제 설명정수가 담긴 리스트 num_list가 주어집니다. num_list의 홀수만 순서대로 이어 붙인 수와 짝수만 순서대로 이어 붙인 수의 합을 return하도록 solution 함수를 완성해주세요.제한사항  2 ≤ num_list의 길이 ≤ 10  1 ≤ num_list의 원소 ≤ 9  num_list에는 적어도 한 개씩의 짝수와 홀수가 있습니다.입출력 예            num_list      result                  [3, 4, 5, 2, 1]      393              [5, 7, 8, 3]      581      입출력 예 설명입출력 예 #1  홀수만 이어 붙인 수는 351이고 짝수만 이어 붙인 수는 42입니다. 두 수의 합은 393입니다.입출력 예 #2  홀수만 이어 붙인 수는 573이고 짝수만 이어 붙인 수는 8입니다. 두 수의 합은 581입니다.Solution  filter와 reduce 함수를 이용해서 문제를 풀었습니다.import Foundationfunc solution(_ num_list:[Int]) -&gt; Int {    let odd = Int(num_list.filter{$0 % 2 != 0}.reduce(\"\"){String($0) + String($1)}) ?? 0    let even = Int(num_list.filter{$0 % 2 == 0}.reduce(\"\"){String($0) + String($1)}) ?? 0        return odd + even}  아래는 같은 방법이지만 조금 더 깔끔한 코드입니다. filter, map, joined을 사용했습니다.func solution(_ num_list:[Int]) -&gt; Int {    let odd = Int(num_list.filter{$0 % 2 != 0}.map{String($0)}.joined()) ?? 0    let even = Int(num_list.filter{$0 % 2 == 0}.map{String($0)}.joined()) ?? 0        return odd + even}"
  },
  
  {
    "title": "Basic24 원소들의 곱과 합",
    "url": "/posts/ProgrammersBasic-24/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-01-15 00:00:00 +0900",
    





    
    "snippet": "문제: 원소들의 곱과 합문제 설명정수가 담긴 리스트 num_list가 주어질 때, 모든 원소들의 곱이 모든 원소들의 합의 제곱보다 작으면 1을 크면 0을 return하도록 solution 함수를 완성해주세요.제한사항  2 ≤ num_list의 길이 ≤ 10  1 ≤ num_list의 원소 ≤ 9입출력 예            num_list      r...",
    "content": "문제: 원소들의 곱과 합문제 설명정수가 담긴 리스트 num_list가 주어질 때, 모든 원소들의 곱이 모든 원소들의 합의 제곱보다 작으면 1을 크면 0을 return하도록 solution 함수를 완성해주세요.제한사항  2 ≤ num_list의 길이 ≤ 10  1 ≤ num_list의 원소 ≤ 9입출력 예            num_list      result                  [3, 4, 5, 2, 1]      1              [5, 7, 8, 3]      0      입출력 예 설명입출력 예 #1  모든 원소의 곱은 120, 합의 제곱은 225이므로 1을 return합니다.입출력 예 #2  모든 원소의 곱은 840, 합의 제곱은 529이므로 0을 return합니다.Solution  reduce함수를 사용해 문제를 해결했습니다. 여기서 reduce(0)의 ()안에 들어가는 매개변수는 initialResult로 초기누적값을 의미하는데, 이는 1부터 5를 더할때 initialResult + 1로 시작한다는 의미입니다. 그래서 처음에 *에도 reduce(0)을 사용했었는데, 이 때 초기값이 0*1이 되면서 모든 결과값이 0이 되는 상황을 겪었습니다.import Foundationfunc solution(_ num_list:[Int]) -&gt; Int {    let multiplication = num_list.reduce(1){$0 * $1}    let sumSquar = pow(Float(num_list.reduce(0){$0 + $1}), 2)    return multiplication &lt; Int(sumSquar) ? 1 : 0}  또한 reduce는 아래처럼 reduce(0, +)이렇게 사용할 수도 있습니다.func solution(_ num_list:[Int]) -&gt; Int {    let multiplication = num_list.reduce(1, *)    let sumSquar = pow(Float(num_list.reduce(0, +), 2)    return multiplication &lt; Int(sumSquar) ? 1 : 0}"
  },
  
  {
    "title": "Basic23 주사위 게임 2",
    "url": "/posts/ProgrammersBasic-23/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-01-15 00:00:00 +0900",
    





    
    "snippet": "문제: 주사위 게임 2문제 설명1부터 6까지 숫자가 적힌 주사위가 세 개 있습니다. 세 주사위를 굴렸을 때 나온 숫자를 각각 a, b, c라고 했을 때 얻는 점수는 다음과 같습니다.  세 숫자가 모두 다르다면 a + b + c 점을 얻습니다.  세 숫자 중 어느 두 숫자는 같고 나머지 다른 숫자는 다르다면 (a + b + c) × (a2 + b2 + ...",
    "content": "문제: 주사위 게임 2문제 설명1부터 6까지 숫자가 적힌 주사위가 세 개 있습니다. 세 주사위를 굴렸을 때 나온 숫자를 각각 a, b, c라고 했을 때 얻는 점수는 다음과 같습니다.  세 숫자가 모두 다르다면 a + b + c 점을 얻습니다.  세 숫자 중 어느 두 숫자는 같고 나머지 다른 숫자는 다르다면 (a + b + c) × (a2 + b2 + c2 )점을 얻습니다.  세 숫자가 모두 같다면 (a + b + c) × (a2 + b2 + c2 ) × (a3 + b3 + c3 )점을 얻습니다.세 정수 a, b, c가 매개변수로 주어질 때, 얻는 점수를 return 하는 solution 함수를 작성해 주세요.제한사항  a, b, c는 1이상 6이하의 정수입니다.입출력 예            a      b      c      result                  2      6      1      9              5      3      3      473              4      4      4      110592      입출력 예 설명입출력 예 #1  예제 1번에서 세 주사위 숫자가 모두 다르므로 2 + 6 + 1 = 9점을 얻습니다. 따라서 9를 return 합니다.입출력 예 #2  예제 2번에서 두 주사위 숫자만 같으므로 (5 + 3 + 3) × (52 + 32 + 32 ) = 11 × 43 = 473점을 얻습니다. 따라서 473을 return 합니다.입출력 예 #3  예제 3번에서 세 주사위 숫자가 모두 같으므로 (4 + 4 + 4) × (42 + 42 + 42 ) × (43 + 43 + 43 ) = 12 × 48 × 192 = 110,592점을 얻습니다. 따라서 110592를 return 합니다.Solution  switch case문을 사용하여 세 개의 숫자가 다 같은 경우, 다 다른 경우 , 나머지로 나누었습니다. 또한 n제곱은 a*a*a이런 방식으로도 가능하며, pow(a, 3)함수를 사용할 수 있습니다.import Foundationfunc solution(_ a:Int, _ b:Int, _ c:Int) -&gt; Int {    switch (true) {        case a == b &amp;&amp; b == c :            return Int(27 * pow(Float(a), 6)) //(3*a)*(3*a*a)*(3*a*a*a)         case a != b &amp;&amp; b != c &amp;&amp; a != c :            return a + b + c        default:            return (a + b + c) * (a*a + b*b + c*c)    }}"
  },
  
  {
    "title": "Basic22 등차수열의 특정한 항만 더하기",
    "url": "/posts/ProgrammersBasic-22/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-01-15 00:00:00 +0900",
    





    
    "snippet": "문제: 등차수열의 특정한 항만 더하기문제 설명두 정수 a, d와 길이가 n인 boolean 배열 included가 주어집니다. 첫째항이 a, 공차가 d인 등차수열에서 included[i]가 i + 1항을 의미할 때, 이 등차수열의 1항부터 n항까지 included가 true인 항들만 더한 값을 return 하는 solution 함수를 작성해 주세요.제...",
    "content": "문제: 등차수열의 특정한 항만 더하기문제 설명두 정수 a, d와 길이가 n인 boolean 배열 included가 주어집니다. 첫째항이 a, 공차가 d인 등차수열에서 included[i]가 i + 1항을 의미할 때, 이 등차수열의 1항부터 n항까지 included가 true인 항들만 더한 값을 return 하는 solution 함수를 작성해 주세요.제한사항  1 ≤ a ≤ 100  1 ≤ d ≤ 100  1 ≤ included의 길이 ≤ 100  included에는 true가 적어도 하나 존재합니다.입출력 예            a      d      included      result                  3      4      [true, false, false, true, true]      37              7      1      [false, false, false, true, false, false, false]      10      입출력 예 설명입출력 예 #1      예제 1번은 a와 d가 각각 3, 4이고 included의 길이가 5입니다. 이를 표로 나타내면 다음과 같습니다.                                       1항          2항          3항          4항          5항                                      등차수열          3          7          11          15          19                          included          true          false          false          true          true                      따라서 true에 해당하는 1항, 4항, 5항을 더한 3 + 15 + 19 = 37을 return 합니다.  입출력 예 #2      예제 2번은 a와 d가 각각 7, 1이고 included의 길이가 7입니다. 이를 표로 나타내면 다음과 같습니다.                                       1항          2항          3항          4항          5항          6항          7항                                      등차수열          7          8          9          10          11          12          13                          included          false          false          false          true          false          false          false                      따라서 4항만 true이므로 10을 return 합니다.  Solution  for문을 이용해 풀었습니다.import Foundationfunc solution(_ a:Int, _ d:Int, _ included:[Bool]) -&gt; Int {    var result = 0    for i in 0..&lt;included.count {        if included[i] {            result += a + d*i        }    }    return result}"
  },
  
  {
    "title": "Basic21 코드 처리하기",
    "url": "/posts/ProgrammersBasic-21/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-01-14 00:00:00 +0900",
    





    
    "snippet": "문제: 코드 처리하기문제 설명문자열 code가 주어집니다.code를 앞에서부터 읽으면서 만약 문자가 “1”이면 mode를 바꿉니다. mode에 따라 code를 읽어가면서 문자열 ret을 만들어냅니다.mode는 0과 1이 있으며, idx를 0 부터 code의 길이 - 1 까지 1씩 키워나가면서 code[idx]의 값에 따라 다음과 같이 행동합니다.  m...",
    "content": "문제: 코드 처리하기문제 설명문자열 code가 주어집니다.code를 앞에서부터 읽으면서 만약 문자가 “1”이면 mode를 바꿉니다. mode에 따라 code를 읽어가면서 문자열 ret을 만들어냅니다.mode는 0과 1이 있으며, idx를 0 부터 code의 길이 - 1 까지 1씩 키워나가면서 code[idx]의 값에 따라 다음과 같이 행동합니다.  mode가 0일 때           code[idx]가 “1”이 아니면 idx가 짝수일 때만 ret의 맨 뒤에 code[idx]를 추가합니다.      code[idx]가 “1”이면 mode를 0에서 1로 바꿉니다.        mode가 1일 때          code[idx]가 “1”이 아니면 idx가 홀수일 때만 ret의 맨 뒤에 code[idx]를 추가합니다.      code[idx]가 “1”이면 mode를 1에서 0으로 바꿉니다.      문자열 code를 통해 만들어진 문자열 ret를 return 하는 solution 함수를 완성해 주세요.단, 시작할 때 mode는 0이며, return 하려는 ret가 만약 빈 문자열이라면 대신 “EMPTY”를 return 합니다.제한사항  1 ≤ code의 길이 ≤ 100,000          code는 알파벳 소문자 또는 “1”로 이루어진 문자열입니다.      입출력 예            code      result                  “abc1abc1abc”      “acbac”      입출력 예 설명입출력 예 #1  code의 각 인덱스 i에 따라 다음과 같이 mode와 ret가 변합니다.            i      code[i]      mode      ret                  0      “a”      0      “a”              1      “b”      0      “a”              2      “c”      0      “ac”              3      “1”      1      “ac”              4      “a”      1      “ac”              5      “b”      1      “acb”              6      “c”      1      “acb”              7      “1”      0      “acb”              8      “a”      0      “acba”              9      “b”      0      “acba”              10      “c”      0      “acbac”      따라서 “acbac”를 return 합니다.Solution  문제의 조건에 따라 for문과 if문을 이용해 풀은 코드는 아래와 같습니다.import Foundationfunc solution(_ code:String) -&gt; String {    var mode = 0    var codeArray = Array(code)    var ret = [Character]()    for i in 0..&lt;code.count {        if mode == 0 {            if codeArray[i] == \"1\" {                mode = 1                continue;            }            if i % 2 == 0 {                ret.append(codeArray[i])            }        }         else {            if codeArray[i] == \"1\" {                mode = 0                continue;            }                        if i % 2 != 0 {                ret.append(codeArray[i])            }        }        }    return String(ret) == \"\" ? \"EMPTY\" : String(ret)}  이후 다른 풀이법으로, enumerated()함수를 사용해 코드를 줄일 수 있었습니다.func solution(_ code:String) -&gt; String {\tvar mode = false\tvar ret = \"\"\tcode.enumerated().forEach{ index, char in\t\tif char == \"1\"{mode.toggle()}\t\telse {\t\t\tif !mode &amp;&amp; index % 2 == 0 {\t\t\t\tret += String(char)\t\t\t}\t\t\telse if mode &amp;&amp; index % 2 != 0 {\t\t\t\tret += String(char)\t\t\t}\t\t}    }        return ret.isEmpty ? \"EMPTY\" : ret}"
  },
  
  {
    "title": "Basic20 flag에 따라 다른 값 반환하기",
    "url": "/posts/ProgrammersBasic-20/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-01-14 00:00:00 +0900",
    





    
    "snippet": "문제: flag에 따라 다른 값 반환하기문제 설명두 정수 a, b와 boolean 변수 flag가 매개변수로 주어질 때, flag가 true면 a + b를 false면 a - b를 return 하는 solution 함수를 작성해 주세요.제한사항  -1,000 ≤ a, b ≤ 1,000입출력 예            a      b      flag   ...",
    "content": "문제: flag에 따라 다른 값 반환하기문제 설명두 정수 a, b와 boolean 변수 flag가 매개변수로 주어질 때, flag가 true면 a + b를 false면 a - b를 return 하는 solution 함수를 작성해 주세요.제한사항  -1,000 ≤ a, b ≤ 1,000입출력 예            a      b      flag      result                  -4      7      true      3              -4      7      false      -11      입출력 예입출력 예 #1  예제 1번에서 flag가 true이므로 a + b = (-4) + 7 = 3을 return 합니다.입출력 예 #2  예제 2번에서 flag가 false이므로 a - b = (-4) - 7 = -11을 return 합니다.Solution  3항 연산자를 이용했습니다.import Foundationfunc solution(_ a:Int, _ b:Int, _ flag:Bool) -&gt; Int {    return flag ? a + b : a - b}"
  },
  
  {
    "title": "Basic19 조건 문자열",
    "url": "/posts/ProgrammersBasic-19/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-01-14 00:00:00 +0900",
    





    
    "snippet": "문제: 조건 문자열문제 설명문자열에 따라 다음과 같이 두 수의 크기를 비교하려고 합니다.   두 수가 n과 m이라면          ”&gt;”, “=” : n &gt;= m      ”&lt;”, “=” : n &lt;= m      ”&gt;”, “!” : n &gt; m      ”&lt;”, “!” : n &lt; m      두 문자열 ine...",
    "content": "문제: 조건 문자열문제 설명문자열에 따라 다음과 같이 두 수의 크기를 비교하려고 합니다.   두 수가 n과 m이라면          ”&gt;”, “=” : n &gt;= m      ”&lt;”, “=” : n &lt;= m      ”&gt;”, “!” : n &gt; m      ”&lt;”, “!” : n &lt; m      두 문자열 ineq와 eq가 주어집니다. ineq는 “&lt;”와 “&gt;”중 하나고, eq는 “=”와 “!”중 하나입니다. 그리고 두 정수 n과 m이 주어질 때, n과 m이 ineq와 eq의 조건에 맞으면 1을 아니면 0을 return하도록 solution 함수를 완성해주세요.제한 사항  1 ≤ n, m ≤ 100입출력 예            ineq      eq      n      m      result                  ”&lt;”      ”=”      20      50      1              ”&gt;”      ”!”      41      78      0      입출력 예 설명입출력 예 #1  20 &lt;= 50은 참이기 때문에 1을 return합니다.입출력 예 #2  41 &gt; 78은 거짓이기 때문에 0을 return합니다.Solution  switch case문을 사용하여 문제를 해결했습니다.import Foundationfunc solution(_ ineq:String, _ eq:String, _ n:Int, _ m:Int) -&gt; Int {    switch (ineq, eq){        case (\"&gt;\", \"=\") :            return n &gt;= m ? 1 : 0        case (\"&lt;\", \"=\") :            return n &lt;= m ? 1 : 0        case (\"&gt;\", \"!\") :            return n &gt; m ? 1 : 0        case (\"&lt;\", \"!\") :            return n &lt; m ? 1 : 0        default :            return n == m ? 1 : 0    }}"
  },
  
  {
    "title": "Basic18 홀짝에 따라 다른 값 반환하기",
    "url": "/posts/ProgrammersBasic-18/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-01-14 00:00:00 +0900",
    





    
    "snippet": "문제: 홀짝에 따라 다른 값 반환하기문제 설명양의 정수 n이 매개변수로 주어질 때, n이 홀수라면 n 이하의 홀수인 모든 양의 정수의 합을 return 하고 n이 짝수라면 n 이하의 짝수인 모든 양의 정수의 제곱의 합을 return 하는 solution 함수를 작성해 주세요.제한사항  1 ≤ n ≤ 100입출력 예            n      re...",
    "content": "문제: 홀짝에 따라 다른 값 반환하기문제 설명양의 정수 n이 매개변수로 주어질 때, n이 홀수라면 n 이하의 홀수인 모든 양의 정수의 합을 return 하고 n이 짝수라면 n 이하의 짝수인 모든 양의 정수의 제곱의 합을 return 하는 solution 함수를 작성해 주세요.제한사항  1 ≤ n ≤ 100입출력 예            n      result                  7      16              10      220      입출력 예 설명입출력 예 #1  예제 1번의 n은 7로 홀수입니다. 7 이하의 모든 양의 홀수는 1, 3, 5, 7이고 이들의 합인 1 + 3 + 5 + 7 = 16을 return 합니다.입출력 예 #2  예제 2번의 n은 10으로 짝수입니다. 10 이하의 모든 양의 짝수는 2, 4, 6, 8, 10이고 이들의 제곱의 합인 22 + 42 + 62 + 82 + 102 = 4 + 16 + 36 + 64 + 100 = 220을 return 합니다.Solution  처음에 적당한 문법이 떠오르지 않아서 for문, %연산자를 통해 문제를 해결했습니다.import Foundationfunc solution(_ n:Int) -&gt; Int {    var result = 0        if n % 2 == 0 {        for i in 0...n {            if i % 2 == 0 {                result += (i*i)            }        }    } else {        for i in 0...n {            if i % 2 != 0 {                result += i            }        }    }    return result}  이후 stride라는 함수를 알게되어서 적용시켜 보았습니다. stride(from: x, through: y, by: z)는 x부터 y까지(through는 y포함 to는 y포함하지 않음) z의 보폭으로 나아간다고 생각하면 이해하기 좋습니다.func solution(_ n:Int) -&gt; Int {    if n % 2 != 0 {        return stride(from: 1, through: n, by: 2).reduce(0){$0 + $1}    } else {        return stride(from: 2, through: n, by: 2).reduce(0){$0 + $1 * $1}    }}"
  },
  
  {
    "title": "Basic17 공배수",
    "url": "/posts/ProgrammersBasic-17/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-01-13 00:00:00 +0900",
    





    
    "snippet": "문제: 공배수문제 설명정수 number와 n, m이 주어집니다. number가 n의 배수이면서 m의 배수이면 1을 아니라면 0을 return하도록 solution 함수를 완성해주세요.제한사항  10 ≤ number ≤ 100  2 ≤ n, m &lt; 10입출력 예            number      n      m      result     ...",
    "content": "문제: 공배수문제 설명정수 number와 n, m이 주어집니다. number가 n의 배수이면서 m의 배수이면 1을 아니라면 0을 return하도록 solution 함수를 완성해주세요.제한사항  10 ≤ number ≤ 100  2 ≤ n, m &lt; 10입출력 예            number      n      m      result                  60      2      3      1              55      10      5      0      입출력 예 설명입출력 예 #1  60은 2의 배수이면서 3의 배수이기 때문에 1을 return합니다.입출력 예 #2  55는 5의 배수이지만 10의 배수가 아니기 때문에 0을 return합니다.Solution  이전 문제와 마찬가지로 %연산을 통해 문제를 해결했습니다. 공배수이기 때문에 number가 n, m둘 다의 배수인 경우만을 1로 반환하게 합니다.import Foundationfunc solution(_ number:Int, _ n:Int, _ m:Int) -&gt; Int {        return (number % n == 0 &amp;&amp; number % m == 0) ? 1 : 0}"
  },
  
  {
    "title": "Basic16 n의 배수",
    "url": "/posts/ProgrammersBasic-16/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-01-13 00:00:00 +0900",
    





    
    "snippet": "문제: n의 배수문제 설명정수 num과 n이 매개 변수로 주어질 때, num이 n의 배수이면 1을 return n의 배수가 아니라면 0을 return하도록 solution 함수를 완성해주세요.제한사항  2 ≤ num ≤ 100  2 ≤ n ≤ 9입출력 예            num      n      result                  98 ...",
    "content": "문제: n의 배수문제 설명정수 num과 n이 매개 변수로 주어질 때, num이 n의 배수이면 1을 return n의 배수가 아니라면 0을 return하도록 solution 함수를 완성해주세요.제한사항  2 ≤ num ≤ 100  2 ≤ n ≤ 9입출력 예            num      n      result                  98      2      1              34      3      0      입출력 예 설명입출력 예 #1  98은 2의 배수이므로 1을 return합니다.입출력 예 #2  32는 3의 배수가 아니므로 0을 return합니다.Solution  num이 n의 배수라면 num / 2의 나머지는 0이 됩니다. 따라서 나머지 연산자 % 를 사용하여 문제를 풀었습니다.import Foundationfunc solution(_ num:Int, _ n:Int) -&gt; Int {    return num % n == 0 ? 1 : 0}"
  },
  
  {
    "title": "Basic15 두 수의 연산값 비교하기",
    "url": "/posts/ProgrammersBasic-15/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-01-13 00:00:00 +0900",
    





    
    "snippet": "문제: 두 수의 연산값 비교하기문제 설명연산 ⊕는 두 정수에 대한 연산으로 두 정수를 붙여서 쓴 값을 반환합니다. 예를 들면 다음과 같습니다.  12 ⊕ 3 = 123  3 ⊕ 12 = 312양의 정수 a와 b가 주어졌을 때, a ⊕ b와 2 * a * b 중 더 큰 값을 return하는 solution 함수를 완성해 주세요.단, a ⊕ b와 2 * ...",
    "content": "문제: 두 수의 연산값 비교하기문제 설명연산 ⊕는 두 정수에 대한 연산으로 두 정수를 붙여서 쓴 값을 반환합니다. 예를 들면 다음과 같습니다.  12 ⊕ 3 = 123  3 ⊕ 12 = 312양의 정수 a와 b가 주어졌을 때, a ⊕ b와 2 * a * b 중 더 큰 값을 return하는 solution 함수를 완성해 주세요.단, a ⊕ b와 2 * a * b가 같으면  a ⊕ b를 return 합니다.제한사항  1 ≤ a, b &lt; 10,000입출력 예            a      b      result                  2      91      364              91      2      912      입출력 예 설명입출력 예 #1  a ⊕ b = 291 이고, 2 * a * b = 364 입니다. 둘 중 더 큰 값은 364 이므로 364를 return 합니다.입출력 예 #2  a ⊕ b = 912 이고, 2 * a * b = 364 입니다. 둘 중 더 큰 값은 912 이므로 912를 return 합니다.Solution  a ⊕ b의 연산은 String 형변환과 String의 덧셈연산을 통해 구하고, 2 * a * b의 연산은 그대로 Int의 연산으로 구한 후, 값을 비교했습니다.import Foundationfunc solution(_ a:Int, _ b:Int) -&gt; Int {    let result1 = Int(String(a) + String(b)) ?? 0    let result2 = 2 * a * b        return (result1 &gt;= result2 ? result1 : result2)}"
  },
  
  {
    "title": "Basic14 더 크게 합치기",
    "url": "/posts/ProgrammersBasic-14/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-01-13 00:00:00 +0900",
    





    
    "snippet": "14. 더 크게 합치기문제 설명연산 ⊕는 두 정수에 대한 연산으로 두 정수를 붙여서 쓴 값을 반환합니다. 예를 들면 다음과 같습니다.  12 ⊕ 3 = 123  3 ⊕ 12 = 312양의 정수 a와 b가 주어졌을 때, a ⊕ b와 b ⊕ a 중 더 큰 값을 return 하는 solution 함수를 완성해 주세요.단, a ⊕ b와 b ⊕ a가 같다면 a...",
    "content": "14. 더 크게 합치기문제 설명연산 ⊕는 두 정수에 대한 연산으로 두 정수를 붙여서 쓴 값을 반환합니다. 예를 들면 다음과 같습니다.  12 ⊕ 3 = 123  3 ⊕ 12 = 312양의 정수 a와 b가 주어졌을 때, a ⊕ b와 b ⊕ a 중 더 큰 값을 return 하는 solution 함수를 완성해 주세요.단, a ⊕ b와 b ⊕ a가 같다면 a ⊕ b를 return 합니다.제한사항  1 ≤ a, b &lt; 10,000입출력 예            a      b      result                  9      91      991              89      8      898      입출력 예 설명입출력 예 #1  a ⊕ b = 991 이고, b ⊕ a = 919 입니다. 둘 중 더 큰 값은 991 이므로 991을 return 합니다.입출력 예 #2  a ⊕ b = 898 이고, b ⊕ a = 889 입니다. 둘 중 더 큰 값은 898 이므로 898을 return 합니다.Solution  String으로 형변환을 통해서 a와b를 붙이고, 다시 Int로 형변환을 통해 두개의 결과 값을 비교하여 더 큰 값을 return 했습니다.import Foundationfunc solution(_ a:Int, _ b:Int) -&gt; Int {    let str1 = String(a) + String(b)    let str2 = String(b) + String(a)    let result1 = Int(str1) ?? 0    let result2 = Int(str2) ?? 0        return (result1 &gt; result2 ? result1 : result2)}"
  },
  
  {
    "title": "Basic13 문자열 곱하기",
    "url": "/posts/ProgrammersBasic-13/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-01-13 00:00:00 +0900",
    





    
    "snippet": "13. 문자열 곱하기문제 설명문자열 my_string과 정수 k가 주어질 때, my_string을 k번 반복한 문자열을 return 하는 solution 함수를 작성해 주세요.제한사항  1 ≤ my_string의 길이 ≤ 100  my_string은 영소문자로만 이루어져 있습니다.  1 ≤ k ≤ 100입출력 예            my_string ...",
    "content": "13. 문자열 곱하기문제 설명문자열 my_string과 정수 k가 주어질 때, my_string을 k번 반복한 문자열을 return 하는 solution 함수를 작성해 주세요.제한사항  1 ≤ my_string의 길이 ≤ 100  my_string은 영소문자로만 이루어져 있습니다.  1 ≤ k ≤ 100입출력 예            my_string      k      result                  “string”      3      “stringstringstring”              “love”      10      “lovelovelovelovelovelovelovelovelovelove”      입출력 예 설명입출력 예 #1  예제 1번의 my_string은 “string”이고 이를 3번 반복한 문자열은 “stringstringstring”이므로 이를 return 합니다.입출력 예 #2  예제 2번의 my_string은 “love”이고 이를 10번 반복한 문자열은 “lovelovelovelovelovelovelovelovelovelove”이므로 이를 return 합니다.Solution  간단하게 반복문으로도 구현할 수 있겠지만 String의 init 중 (repeating:count:)를 사용해서 구현할 수 있습니다.import Foundationfunc solution(_ my_string:String, _ k:Int) -&gt; String {    return String(repeating: my_string, count: k)}"
  },
  
  {
    "title": "Basic12 문자 리스트를 문자열로 변환하기",
    "url": "/posts/ProgrammersBasic-12/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-01-12 00:00:00 +0900",
    





    
    "snippet": "12. 문자 리스트를 문자열로 변환하기문제 설명문자들이 담겨있는 배열 arr가 주어집니다. arr의 원소들을 순서대로 이어 붙인 문자열을 return 하는 solution함수를 작성해 주세요.제한사항  1 ≤ arr의 길이 ≤ 200          arr의 원소는 전부 알파벳 소문자로 이루어진 길이가 1인 문자열입니다.      입출력 예      ...",
    "content": "12. 문자 리스트를 문자열로 변환하기문제 설명문자들이 담겨있는 배열 arr가 주어집니다. arr의 원소들을 순서대로 이어 붙인 문자열을 return 하는 solution함수를 작성해 주세요.제한사항  1 ≤ arr의 길이 ≤ 200          arr의 원소는 전부 알파벳 소문자로 이루어진 길이가 1인 문자열입니다.      입출력 예            arr      result                  [“a”,”b”,”c”]      “abc”      Solution  joined()라는 함수를 사용해 string들을 합칠 수 있습니다.import Foundationfunc solution(_ arr:[String]) -&gt; String {    return arr.joined()}"
  },
  
  {
    "title": "Basic11 문자열 섞기",
    "url": "/posts/ProgrammersBasic-11/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-01-12 00:00:00 +0900",
    





    
    "snippet": "11. 문자열 섞기문제 설명길이가 같은 두 문자열 str1과 str2가 주어집니다.두 문자열의 각 문자가 앞에서부터 서로 번갈아가면서 한 번씩 등장하는 문자열을 만들어 return 하는 solution 함수를 완성해 주세요.제한사항  1 ≤ str1의 길이 = str2의 길이 ≤ 10          str1과 str2는 알파벳 소문자로 이루어진 문자...",
    "content": "11. 문자열 섞기문제 설명길이가 같은 두 문자열 str1과 str2가 주어집니다.두 문자열의 각 문자가 앞에서부터 서로 번갈아가면서 한 번씩 등장하는 문자열을 만들어 return 하는 solution 함수를 완성해 주세요.제한사항  1 ≤ str1의 길이 = str2의 길이 ≤ 10          str1과 str2는 알파벳 소문자로 이루어진 문자열입니다.      입출력 예            str1      str2      result                  “aaaaa”      “bbbbb”      “ababababab”      Solution  이전 문제와 마찬가지로 Array로 변환한 후에 처리한 코드는 아래와 같습니다.import Foundationfunc solution(_ str1:String, _ str2:String) -&gt; String {    var result = [Character]()    var str1Array = Array(str1)    var str2Array = Array(str2)        for i in 0..&lt;str1.count {        result.append(str1Array[i])        result.append(str2Array[i])    }        return String(result)}  다른 방법으로는, 두 개의 시퀀스를 이용해서 시퀀스 쌍을 만들 수 있는 zip을 이용해서 문제를 풀 수 있습니다.func solution(_ str1:String, _ str2:String) -&gt; String {    var result = \"\"    for (a,b) in zip(str1, str2){        result.append(a)        result.append(b)    }    return result}"
  },
  
  {
    "title": "Basic10 문자열 겹쳐쓰기",
    "url": "/posts/ProgrammersBasic-10/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-01-12 00:00:00 +0900",
    





    
    "snippet": "10. 문자열 겹쳐쓰기문제 설명문자열 my_string, overwrite_string과 정수 s가 주어집니다. 문자열 my_string의 인덱스 s부터 overwrite_string의 길이만큼을 문자열 overwrite_string으로 바꾼 문자열을 return 하는 solution 함수를 작성해 주세요.제한사항  my_string와 overwrit...",
    "content": "10. 문자열 겹쳐쓰기문제 설명문자열 my_string, overwrite_string과 정수 s가 주어집니다. 문자열 my_string의 인덱스 s부터 overwrite_string의 길이만큼을 문자열 overwrite_string으로 바꾼 문자열을 return 하는 solution 함수를 작성해 주세요.제한사항  my_string와 overwrite_string은 숫자와 알파벳으로 이루어져 있습니다.  1 ≤ overwrite_string의 길이 ≤ my_string의 길이 ≤ 1,000  0 ≤ s ≤ my_string의 길이 - overwrite_string의 길이입출력 예            my_string      overwrite_string      s      result                  “He11oWor1d”      “lloWorl”      2      “HelloWorld”              “Program29b8UYP”      “merS123”      7      “ProgrammerS123”      입출력 예 설명입출력 예 #1  예제 1번의 my_string에서 인덱스 2부터 overwrite_string의 길이만큼에 해당하는 부분은 “11oWor1”이고 이를 “lloWorl”로 바꾼 “HelloWorld”를 return 합니다.입출력 예 #2  예제 2번의 my_string에서 인덱스 7부터 overwrite_string의 길이만큼에 해당하는 부분은 “29b8UYP”이고 이를 “merS123”로 바꾼 “ProgrammerS123”를 return 합니다.Solution  swift에서는 인덱스를 사용해서 String의 각 요소에 접근하는 방법이 안됩니다. (my_string[i] - error) 그래서 String을 Array로 변환하고, 필요한 작업을 처리한 후에 다시 String으로 변환해서 반환해주는 코드를 작성했습니다.import Foundationfunc solution(_ my_string:String, _ overwrite_string:String, _ s:Int) -&gt; String {    var my_array = Array(my_string)    var overwrite_array = Array(overwrite_string)    for i in s..&lt;overwrite_array.count + s {        my_array[i] = overwrite_array[i-s]    }    return String(my_array)}  또한 Array에는 replaceSubrange라는 내부함수가 있어서 이를 사용하는 방법도 있습니다.my_array.replaceSubrange(s...(overwrite_array.count+s-1), with: overwrite_string)"
  },
  
  {
    "title": "Basic9 홀짝 구분하기",
    "url": "/posts/ProgrammersBasic-9/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-01-11 00:00:00 +0900",
    





    
    "snippet": "9. 홀짝 구분하기문제 설명자연수 n이 입력으로 주어졌을 때 만약 n이 짝수이면 “n is even”을, 홀수이면 “n is odd”를 출력하는 코드를 작성해 보세요.제한사항  1 ≤ n ≤ 1,000입출력 예입력 #1100출력 #1100 is even입력 #21출력 #21 is oddSolutionimport Foundationlet a = Int(...",
    "content": "9. 홀짝 구분하기문제 설명자연수 n이 입력으로 주어졌을 때 만약 n이 짝수이면 “n is even”을, 홀수이면 “n is odd”를 출력하는 코드를 작성해 보세요.제한사항  1 ≤ n ≤ 1,000입출력 예입력 #1100출력 #1100 is even입력 #21출력 #21 is oddSolutionimport Foundationlet a = Int(readLine()!)!if a % 2 == 0 {    print(\"\\(a) is even\")} else {    print(\"\\(a) is odd\")}"
  },
  
  {
    "title": "Basic8 문자열 돌리기",
    "url": "/posts/ProgrammersBasic-8/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-01-11 00:00:00 +0900",
    





    
    "snippet": "8. 문자열 돌리기문제 설명문자열 str이 주어집니다.문자열을 시계방향으로 90도 돌려서 아래 입출력 예와 같이 출력하는 코드를 작성해 보세요.제한사항1 ≤ str의 길이 ≤ 10입출력 예입력 #1abcde출력 #1abcdeSolutionimport Foundationlet s1 = readLine()!s1.map {print($0)}",
    "content": "8. 문자열 돌리기문제 설명문자열 str이 주어집니다.문자열을 시계방향으로 90도 돌려서 아래 입출력 예와 같이 출력하는 코드를 작성해 보세요.제한사항1 ≤ str의 길이 ≤ 10입출력 예입력 #1abcde출력 #1abcdeSolutionimport Foundationlet s1 = readLine()!s1.map {print($0)}"
  },
  
  {
    "title": "Basic7 문자열 붙여서 출력하기",
    "url": "/posts/ProgrammersBasic-7/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-01-10 00:00:00 +0900",
    





    
    "snippet": "7. 문자열 붙여서 출력하기문제 설명두 개의 문자열 str1, str2가 공백으로 구분되어 입력으로 주어집니다.입출력 예와 같이 str1과 str2을 이어서 출력하는 코드를 작성해 보세요.제한사항  1 ≤ str1, str2의 길이 ≤ 10입출력 예입력 #1apple pen출력 #1applepen입력 #2Hello World!출력 #2HelloWorl...",
    "content": "7. 문자열 붙여서 출력하기문제 설명두 개의 문자열 str1, str2가 공백으로 구분되어 입력으로 주어집니다.입출력 예와 같이 str1과 str2을 이어서 출력하는 코드를 작성해 보세요.제한사항  1 ≤ str1, str2의 길이 ≤ 10입출력 예입력 #1apple pen출력 #1applepen입력 #2Hello World!출력 #2HelloWorld!Solutionimport Foundationlet inp = readLine()!.components(separatedBy: [\" \"]).map { $0 }let (s1, s2) = (inp[0], inp[1])print(s1+s2)  String은 '+' 연산자를 이용해서 붙일 수 있습니다."
  },
  
  {
    "title": "Basic6 덧셈식 출력하기",
    "url": "/posts/ProgrammersBasic-6/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-01-10 00:00:00 +0900",
    





    
    "snippet": "문제 설명두 정수 a, b가 주어질 때 다음과 같은 형태의 계산식을 출력하는 코드를 작성해 보세요.a + b = c제한사항  1 ≤ a, b ≤ 100입출력 예입력4 5출력4 + 5 = 9Solutionimport Foundationlet n = readLine()!.components(separatedBy: [\" \"]).map { Int($0)! }...",
    "content": "문제 설명두 정수 a, b가 주어질 때 다음과 같은 형태의 계산식을 출력하는 코드를 작성해 보세요.a + b = c제한사항  1 ≤ a, b ≤ 100입출력 예입력4 5출력4 + 5 = 9Solutionimport Foundationlet n = readLine()!.components(separatedBy: [\" \"]).map { Int($0)! }let (a, b) = (n[0], n[1])print(\"\\(a) + \\(b) = \\(a+b)\")"
  },
  
  {
    "title": "Basic4~5",
    "url": "/posts/ProgrammersBasic-4~5/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-01-10 00:00:00 +0900",
    





    
    "snippet": "4. 대소문자 바꿔서 출력하기문제 설명영어 알파벳으로 이루어진 문자열 str이 주어집니다. 각 알파벳을 대문자는 소문자로 소문자는 대문자로 변환해서 출력하는 코드를 작성해 보세요.제한사항  1 ≤ str의 길이 ≤ 20          str은 알파벳으로 이루어진 문자열입니다.      입출력 예입력aBcDeFg출력AbCdEfGSolutionimpor...",
    "content": "4. 대소문자 바꿔서 출력하기문제 설명영어 알파벳으로 이루어진 문자열 str이 주어집니다. 각 알파벳을 대문자는 소문자로 소문자는 대문자로 변환해서 출력하는 코드를 작성해 보세요.제한사항  1 ≤ str의 길이 ≤ 20          str은 알파벳으로 이루어진 문자열입니다.      입출력 예입력aBcDeFg출력AbCdEfGSolutionimport Foundationlet s1 = readLine()!let result = s1.map {$0.isLowercase ? $0.uppercased() : $0.lowercased()}.joined()print(result)5. 특수문자 출력하기문제 설명다음과 같이 출력하도록 코드를 작성해 주세요.출력 예시!@#$%^&amp;*(\\'\"&lt;&gt;?:;설명  양 끝에 #을 붙여주어야 합니다.Solutionimport Foundationprint(#\"!@#$%^&amp;*(\\'\"&lt;&gt;?:;\"#)"
  },
  
  {
    "title": "Basic1~3",
    "url": "/posts/ProgrammersBasic-1~3/",
    "categories": "Algorithm, Programmers",
    "tags": "Algorithm, SwiftAlgorithm",
    "date": "2024-01-09 00:00:00 +0900",
    





    
    "snippet": "1. 문자열 출력하기문제설명문자열 `str`이 주어질 때, `str`을 출력하는 코드를 작성해 보세요. ### 제한사항  1 ≤ str의 길이 ≤ 1,000,000  str에는 공백이 없으며, 첫째 줄에 한 줄로만 주어집니다.입출력 예시입력HelloWorld!출력HelloWorld!Solutionimport Foundationlet s1 = readL...",
    "content": "1. 문자열 출력하기문제설명문자열 `str`이 주어질 때, `str`을 출력하는 코드를 작성해 보세요. ### 제한사항  1 ≤ str의 길이 ≤ 1,000,000  str에는 공백이 없으며, 첫째 줄에 한 줄로만 주어집니다.입출력 예시입력HelloWorld!출력HelloWorld!Solutionimport Foundationlet s1 = readLine()!print(s1)2. a와 b 출력하기문제 설명정수 a와 b가 주어집니다. 각 수를 입력받아 입출력 예와 같은 형식으로 출력하는 코드를 작성해 보세요.제한사항  -100,000 ≤ a, b ≤ 100,000입출력 예입력4 5출력a = 4b = 5Solutionimport Foundationlet n = readLine()!.components(separatedBy: [\" \"]).map { Int($0)! }let (a, b) = (n[0], n[1])print(\"a = \\(a) \\nb = \\(b)\")3. 문자열 반복해서 출력하기문제 설명문자열 str과 정수 n이 주어집니다.str이 n번 반복된 문자열을 만들어 출력하는 코드를 작성해 보세요.제한사항  1 ≤ str의 길이 ≤ 10  1 ≤ n ≤ 5입출력 예입력string 5출력stringstringstringstringstringSolution일반적으로 반복문을 사용해서 해결하는 방법과, swift의 String에서 지원하는 repeating을 사용하는 방법 두가지가 있습니다.  반복문import Foundationlet inp = readLine()!.components(separatedBy: [\" \"]).map { $0 }let (s1, a) = (inp[0], Int(inp[1])!)var result = \"\"for _ in 0..&lt;a {    result += s1}print(result)  repeatingimport Foundationlet inp = readLine()!.components(separatedBy: [\" \"]).map { $0 }let (s1, a) = (inp[0], Int(inp[1])!)print(String(repeating: s1, count: a))"
  },
  
  {
    "title": "Customize the Favicon",
    "url": "/posts/customize-the-favicon/",
    "categories": "Blogging, Tutorial",
    "tags": "favicon",
    "date": "2019-08-11 01:34:00 +0900",
    





    
    "snippet": "The favicons of Chirpy are placed in the directory assets/img/favicons/. You may want to replace them with your own. The following sections will guide you to create and replace the default favicons...",
    "content": "The favicons of Chirpy are placed in the directory assets/img/favicons/. You may want to replace them with your own. The following sections will guide you to create and replace the default favicons.Generate the faviconPrepare a square image (PNG, JPG, or SVG) with a size of 512x512 or more, and then go to the online tool Real Favicon Generator and click the button Select your Favicon image to upload your image file.In the next step, the webpage will show all usage scenarios. You can keep the default options, scroll to the bottom of the page, and click the button Generate your Favicons and HTML code to generate the favicon.Download &amp; ReplaceDownload the generated package, unzip and delete the following two from the extracted files:  browserconfig.xml  site.webmanifestAnd then copy the remaining image files (.PNG and .ICO) to cover the original files in the directory assets/img/favicons/ of your Jekyll site. If your Jekyll site doesn’t have this directory yet, just create one.The following table will help you understand the changes to the favicon files:            File(s)      From Online Tool      From Chirpy                  *.PNG      ✓      ✗              *.ICO      ✓      ✗        ✓ means keep, ✗ means delete.The next time you build the site, the favicon will be replaced with a customized edition."
  },
  
  {
    "title": "Getting Started",
    "url": "/posts/getting-started/",
    "categories": "Blogging, Tutorial",
    "tags": "getting, started",
    "date": "2019-08-09 21:55:00 +0900",
    





    
    "snippet": "PrerequisitesFollow the instructions in the Jekyll Docs to complete the installation of the basic environment. Git also needs to be installed.하이InstallationCreating a New SiteThere are two ways to ...",
    "content": "PrerequisitesFollow the instructions in the Jekyll Docs to complete the installation of the basic environment. Git also needs to be installed.하이InstallationCreating a New SiteThere are two ways to create a new repository for this theme:  Using the Chirpy Starter - Easy to upgrade, isolates irrelevant project files so you can focus on writing.  GitHub Fork - Convenient for custom development, but difficult to upgrade. Unless you are familiar with Jekyll and are determined to tweak or contribute to this project, this approach is not recommended.Option 1. Using the Chirpy StarterSign in to GitHub and browse to Chirpy Starter, click the button Use this template &gt; Create a new repository, and name the new repository USERNAME.github.io, where USERNAME represents your GitHub username.Option 2. GitHub ForkSign in to GitHub to fork Chirpy, and then rename it to USERNAME.github.io (USERNAME means your username).Next, clone your site to local machine. In order to build JavaScript files later, we need to install Node.js, and then run the tool:$ bash tools/init  If you don’t want to deploy your site on GitHub Pages, append option --no-gh at the end of the above command.The above command will:  Check out the code to the latest tag (to ensure the stability of your site: as the code for the default branch is under development).  Remove non-essential sample files and take care of GitHub-related files.  Build JavaScript files and export to assets/js/dist/, then make them tracked by Git.  Automatically create a new commit to save the changes above.Installing DependenciesBefore running local server for the first time, go to the root directory of your site and run:$ bundleUsageConfigurationUpdate the variables of _config.yml as needed. Some of them are typical options:  url  avatar  timezone  langSocial Contact OptionsSocial contact options are displayed at the bottom of the sidebar. You can turn on/off the specified contacts in file _data/contact.yml.Customizing StylesheetIf you need to customize the stylesheet, copy the theme’s assets/css/jekyll-theme-chirpy.scss to the same path on your Jekyll site, and then add the custom style at the end of it.Starting with version 6.2.0, if you want to overwrite the SASS variables defined in _sass/addon/variables.scss, copy the main sass file _sass/main.scss into the _sass directory in your site’s source, then create a new file _sass/variables-hook.scss and assign new value.Customing Static AssetsStatic assets configuration was introduced in version 5.1.0. The CDN of the static assets is defined by file _data/origin/cors.yml, and you can replace some of them according to the network conditions in the region where your website is published.Also, if you’d like to self-host the static assets, please refer to the chirpy-static-assets.Running Local ServerYou may want to preview the site contents before publishing, so just run it by:$ bundle exec jekyll sAfter a few seconds, the local service will be published at http://127.0.0.1:4000.DeploymentBefore the deployment begins, check out the file _config.yml and make sure the url is configured correctly. Furthermore, if you prefer the project site and don’t use a custom domain, or you want to visit your website with a base URL on a web server other than GitHub Pages, remember to change the baseurl to your project name that starts with a slash, e.g, /project-name.Now you can choose ONE of the following methods to deploy your Jekyll site.Deploy by Using GitHub ActionsThere are a few things to get ready for.  If you’re on the GitHub Free plan, keep your site repository public.      If you have committed Gemfile.lock to the repository, and your local machine is not running Linux, go the the root of your site and update the platform list of the lock-file:    $ bundle lock --add-platform x86_64-linux      Next, configure the Pages service.      Browse to your repository on GitHub. Select the tab Settings, then click Pages in the left navigation bar. Then, in the Source section (under Build and deployment), select GitHub Actions from the dropdown menu.        Push any commits to GitHub to trigger the Actions workflow. In the Actions tab of your repository, you should see the workflow Build and Deploy running. Once the build is complete and successful, the site will be deployed automatically.  At this point, you can go to the URL indicated by GitHub to access your site.Manually Build and DeployOn self-hosted servers, you cannot enjoy the convenience of GitHub Actions. Therefore, you should build the site on your local machine and then upload the site files to the server.Go to the root of the source project, and build your site as follows:$ JEKYLL_ENV=production bundle exec jekyll bUnless you specified the output path, the generated site files will be placed in folder _site of the project’s root directory. Now you should upload those files to the target server."
  },
  
  {
    "title": "Writing a New Post",
    "url": "/posts/write-a-new-post/",
    "categories": "Blogging, Tutorial",
    "tags": "writing",
    "date": "2019-08-08 15:10:00 +0900",
    





    
    "snippet": "This tutorial will guide you how to write a post in the Chirpy template, and it’s worth reading even if you’ve used Jekyll before, as many features require specific variables to be set.Naming and P...",
    "content": "This tutorial will guide you how to write a post in the Chirpy template, and it’s worth reading even if you’ve used Jekyll before, as many features require specific variables to be set.Naming and PathCreate a new file named YYYY-MM-DD-TITLE.EXTENSION and put it in the _posts of the root directory. Please note that the EXTENSION must be one of md and markdown. If you want to save time of creating files, please consider using the plugin Jekyll-Compose to accomplish this.Front MatterBasically, you need to fill the Front Matter as below at the top of the post:---title: TITLEdate: YYYY-MM-DD HH:MM:SS +/-TTTTcategories: [TOP_CATEGORIE, SUB_CATEGORIE]tags: [TAG]     # TAG names should always be lowercase---  The posts’ layout has been set to post by default, so there is no need to add the variable layout in the Front Matter block.Timezone of DateIn order to accurately record the release date of a post, you should not only set up the timezone of _config.yml but also provide the post’s timezone in variable date of its Front Matter block. Format: +/-TTTT, e.g. +0800.Categories and TagsThe categories of each post are designed to contain up to two elements, and the number of elements in tags can be zero to infinity. For instance:---categories: [Animal, Insect]tags: [bee]---Author InformationThe author information of the post usually does not need to be filled in the Front Matter , they will be obtained from variables social.name and the first entry of social.links of the configuration file by default. But you can also override it as follows:Adding author information in _data/authors.yml (If your website doesn’t have this file, don’t hesitate to create one).&lt;author_id&gt;:  name: &lt;full name&gt;  twitter: &lt;twitter_of_author&gt;  url: &lt;homepage_of_author&gt;And then use author to specify a single entry or authors to specify multiple entries:---author: &lt;author_id&gt;                     # for single entry# orauthors: [&lt;author1_id&gt;, &lt;author2_id&gt;]   # for multiple entries---Having said that, the key author can also identify multiple entries.  The benefit of reading the author information from the file _data/authors.yml is that the page will have the meta tag twitter:creator, which enriches the Twitter Cards and is good for SEO.Table of ContentsBy default, the Table of Contents (TOC) is displayed on the right panel of the post. If you want to turn it off globally, go to _config.yml and set the value of variable toc to false. If you want to turn off TOC for a specific post, add the following to the post’s Front Matter:---toc: false---CommentsThe global switch of comments is defined by variable comments.active in the file _config.yml. After selecting a comment system for this variable, comments will be turned on for all posts.If you want to close the comment for a specific post, add the following to the Front Matter of the post:---comments: false---MathematicsFor website performance reasons, the mathematical feature won’t be loaded by default. But it can be enabled by:---math: true---After enabling the mathematical feature, you can add math equations with the following syntax:  Block math should be added with $$ math $$ with mandatory blank lines before and after $$  Inline math (in lines) should be added with $$ math $$ without any blank line before or after $$  Inline math (in lists) should be added with \\$$ math $$&lt;!-- Block math, keep all blank lines --&gt;$$LaTeX_math_expression$$&lt;!-- Inline math in lines, NO blank lines --&gt;\"Lorem ipsum dolor sit amet, $$ LaTeX_math_expression $$ consectetur adipiscing elit.\"&lt;!-- Inline math in lists, escape the first `$` --&gt;1. \\$$ LaTeX_math_expression $$2. \\$$ LaTeX_math_expression $$3. \\$$ LaTeX_math_expression $$MermaidMermaid is a great diagram generation tool. To enable it on your post, add the following to the YAML block:---mermaid: true---Then you can use it like other markdown languages: surround the graph code with ```mermaid and ```.ImagesCaptionAdd italics to the next line of an image, then it will become the caption and appear at the bottom of the image:![img-description](/path/to/image)_Image Caption_SizeIn order to prevent the page content layout from shifting when the image is loaded, we should set the width and height for each image.![Desktop View](/assets/img/sample/mockup.png){: width=\"700\" height=\"400\" }  For an SVG, you have to at least specify its width, otherwise it won’t be rendered.Starting from Chirpy v5.0.0, height and width support abbreviations (height → h, width → w). The following example has the same effect as the above:![Desktop View](/assets/img/sample/mockup.png){: w=\"700\" h=\"400\" }PositionBy default, the image is centered, but you can specify the position by using one of the classes normal, left, and right.  Once the position is specified, the image caption should not be added.      Normal position    Image will be left aligned in below sample:    ![Desktop View](/assets/img/sample/mockup.png){: .normal }            Float to the left    ![Desktop View](/assets/img/sample/mockup.png){: .left }            Float to the right    ![Desktop View](/assets/img/sample/mockup.png){: .right }      Dark/Light modeYou can make images follow theme preferences in dark/light mode. This requires you to prepare two images, one for dark mode and one for light mode, and then assign them a specific class (dark or light):![Light mode only](/path/to/light-mode.png){: .light }![Dark mode only](/path/to/dark-mode.png){: .dark }ShadowThe screenshots of the program window can be considered to show the shadow effect:![Desktop View](/assets/img/sample/mockup.png){: .shadow }CDN URLIf you host the images on the CDN, you can save the time of repeatedly writing the CDN URL by assigning the variable img_cdn of _config.yml file:img_cdn: https://cdn.comOnce img_cdn is assigned, the CDN URL will be added to the path of all images (images of site avatar and posts) starting with /.For instance, when using images:![The flower](/path/to/flower.png)The parsing result will automatically add the CDN prefix https://cdn.com before the image path:&lt;img src=\"https://cdn.com/path/to/flower.png\" alt=\"The flower\"&gt;Image PathWhen a post contains many images, it will be a time-consuming task to repeatedly define the path of the images. To solve this, we can define this path in the YAML block of the post:---img_path: /img/path/---And then, the image source of Markdown can write the file name directly:![The flower](flower.png)The output will be:&lt;img src=\"/img/path/flower.png\" alt=\"The flower\"&gt;Preview ImageIf you want to add an image at the top of the post, please provide an image with a resolution of 1200 x 630. Please note that if the image aspect ratio does not meet 1.91 : 1, the image will be scaled and cropped.Knowing these prerequisites, you can start setting the image’s attribute:---image:  path: /path/to/image  alt: image alternative text---Note that the img_path can also be passed to the preview image, that is, when it has been set, the  attribute path only needs the image file name.For simple use, you can also just use image to define the path.---image: /path/to/image---LQIPFor preview images:---image:  lqip: /path/to/lqip-file # or base64 URI---  You can observe LQIP in the preview image of post Text and Typography.For normal images:![Image description](/path/to/image){: lqip=\"/path/to/lqip-file\" }Pinned PostsYou can pin one or more posts to the top of the home page, and the fixed posts are sorted in reverse order according to their release date. Enable by:---pin: true---PromptsThere are several types of prompts: tip, info, warning, and danger. They can be generated by adding the class prompt-{type} to the blockquote. For example, define a prompt of type info as follows:&gt; Example line for prompt.{: .prompt-info }SyntaxInline Code`inline code part`Filepath Hightlight`/path/to/a/file.extend`{: .filepath}Code BlockMarkdown symbols ``` can easily create a code block as follows:```This is a plaintext code snippet.```Specifying LanguageUsing ```{language} you will get a code block with syntax highlight:```yamlkey: value```  The Jekyll tag {% highlight %} is not compatible with this theme.Line NumberBy default, all languages except plaintext, console, and terminal will display line numbers. When you want to hide the line number of a code block, add the class nolineno to it:```shellecho 'No more line numbers!'```{: .nolineno }Specifying the FilenameYou may have noticed that the code language will be displayed at the top of the code block. If you want to replace it with the file name, you can add the attribute file to achieve this:```shell# content```{: file=\"path/to/file\" }Liquid CodesIf you want to display the Liquid snippet, surround the liquid code with {% raw %} and {% endraw %}:{% raw %}```liquid{% if product.title contains 'Pack' %}  This product's title contains the word Pack.{% endif %}```{% endraw %}Or adding render_with_liquid: false (Requires Jekyll 4.0 or higher) to the post’s YAML block.VideosYou can embed a video with the following syntax:{% include embed/{Platform}.html id='{ID}' %}Where Platform is the lowercase of the platform name, and ID is the video ID.The following table shows how to get the two parameters we need in a given video URL, and you can also know the currently supported video platforms.            Video URL      Platform      ID                  https://www.youtube.com/watch?v=H-B46URT4mg      youtube      H-B46URT4mg              https://www.twitch.tv/videos/1634779211      twitch      1634779211              https://www.bilibili.com/video/BV1Q44y1B7Wf      bilibili      BV1Q44y1B7Wf      Learn MoreFor more knowledge about Jekyll posts, visit the Jekyll Docs: Posts."
  },
  
  {
    "title": "Test",
    "url": "/posts/test/",
    "categories": "Blogging, Demo",
    "tags": "typography",
    "date": "2019-08-08 12:33:00 +0900",
    





    
    "snippet": "This post is to show Markdown syntax rendering on Chirpy, you can also use it as an example of writing. Now, let’s start looking at text and typography.HeadingsH1 - headingH2 - headingH3 - headingH...",
    "content": "This post is to show Markdown syntax rendering on Chirpy, you can also use it as an example of writing. Now, let’s start looking at text and typography.HeadingsH1 - headingH2 - headingH3 - headingH4 - headingParagraphQuisque egestas convallis ipsum, ut sollicitudin risus tincidunt a. Maecenas interdum malesuada egestas. Duis consectetur porta risus, sit amet vulputate urna facilisis ac. Phasellus semper dui non purus ultrices sodales. Aliquam ante lorem, ornare a feugiat ac, finibus nec mauris. Vivamus ut tristique nisi. Sed vel leo vulputate, efficitur risus non, posuere mi. Nullam tincidunt bibendum rutrum. Proin commodo ornare sapien. Vivamus interdum diam sed sapien blandit, sit amet aliquam risus mattis. Nullam arcu turpis, mollis quis laoreet at, placerat id nibh. Suspendisse venenatis eros eros.ListsOrdered list  Firstly  Secondly  ThirdlyUnordered list  Chapter          Section                  Paragraph                    ToDo list  Job          Step 1      Step 2      Step 3      Description list  Sun  the star around which the earth orbits  Moon  the natural satellite of the earth, visible by reflected light from the sunBlock Quote  This line shows the block quote.Prompts  An example showing the tip type prompt.  An example showing the info type prompt.  An example showing the warning type prompt.  An example showing the danger type prompt.Tables            Company      Contact      Country                  Alfreds Futterkiste      Maria Anders      Germany              Island Trading      Helen Bennett      UK              Magazzini Alimentari Riuniti      Giovanni Rovelli      Italy      Linkshttp://127.0.0.1:4000FootnoteClick the hook will locate the footnote1, and here is another footnote2.Inline codeThis is an example of Inline Code.FilepathHere is the /path/to/the/file.extend.Code blocksCommonThis is a common code snippet, without syntax highlight and line number.Specific Languageif [ $? -ne 0 ]; then  echo \"The command was not successful.\";  #do the needful / exitfi;Specific filename@import  \"colors/light-typography\",  \"colors/dark-typography\";MathematicsThe mathematics powered by MathJax:\\[\\sum_{n=1}^\\infty 1/n^2 = \\frac{\\pi^2}{6}\\]When $a \\ne 0$, there are two solutions to $ax^2 + bx + c = 0$ and they are\\[x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}\\]Mermaid SVG gantt  title  Adding GANTT diagram functionality to mermaid  apple :a, 2017-07-20, 1w  banana :crit, b, 2017-07-23, 1d  cherry :active, c, after b a, 1dImagesDefault (with caption)Full screen width and center alignmentLeft alignedFloat to leftPraesent maximus aliquam sapien. Sed vel neque in dolor pulvinar auctor. Maecenas pharetra, sem sit amet interdum posuere, tellus lacus eleifend magna, ac lobortis felis ipsum id sapien. Proin ornare rutrum metus, ac convallis diam volutpat sit amet. Phasellus volutpat, elit sit amet tincidunt mollis, felis mi scelerisque mauris, ut facilisis leo magna accumsan sapien. In rutrum vehicula nisl eget tempor. Nullam maximus ullamcorper libero non maximus. Integer ultricies velit id convallis varius. Praesent eu nisl eu urna finibus ultrices id nec ex. Mauris ac mattis quam. Fusce aliquam est nec sapien bibendum, vitae malesuada ligula condimentum.Float to rightPraesent maximus aliquam sapien. Sed vel neque in dolor pulvinar auctor. Maecenas pharetra, sem sit amet interdum posuere, tellus lacus eleifend magna, ac lobortis felis ipsum id sapien. Proin ornare rutrum metus, ac convallis diam volutpat sit amet. Phasellus volutpat, elit sit amet tincidunt mollis, felis mi scelerisque mauris, ut facilisis leo magna accumsan sapien. In rutrum vehicula nisl eget tempor. Nullam maximus ullamcorper libero non maximus. Integer ultricies velit id convallis varius. Praesent eu nisl eu urna finibus ultrices id nec ex. Mauris ac mattis quam. Fusce aliquam est nec sapien bibendum, vitae malesuada ligula condimentum.Dark/Light mode &amp; ShadowThe image below will toggle dark/light mode based on theme preference, notice it has shadows.VideoReverse Footnote            The footnote source &#8617;              The 2nd footnote source &#8617;      "
  }
  
]

