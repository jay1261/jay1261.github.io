

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://localhost:4000/</id>
  <title>jay1261</title>
  <subtitle>개발 일지</subtitle>
  <updated>2024-03-11T19:23:02+09:00</updated>
  <author>
    <name>Dongjae Lee</name>
    <uri>http://localhost:4000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://localhost:4000/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="ko"
    href="http://localhost:4000/"/>
  <generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator>
  <rights> © 2024 Dongjae Lee </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>SQL Grammer (Where, Between, In, Like)</title>
    <link href="http://localhost:4000/posts/SQL-Grammer-(Where,-Between,-In,-Like)/" rel="alternate" type="text/html" title="SQL Grammer (Where, Between, In, Like)" />
    <published>2024-03-11T00:00:00+09:00</published>
  
    <updated>2024-03-11T00:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/SQL-Grammer-(Where,-Between,-In,-Like)/</id>
    <content src="http://localhost:4000/posts/SQL-Grammer-(Where,-Between,-In,-Like)/" />
    <author>
      <name>jay</name>
    </author>

  
    
    <category term="MySQL" />
    
    <category term="SQL Grammer" />
    
  

  
    <summary>
      





      SQL Grammer (Where, Between, In, Like)

Where

데이터 중에 특정 조건으로 필터링을 해야할 때 사용하는 문법입니다. “나이가 20살 이상인 사람”과 같은 경우의 데이터를 구할 때 사용합니다.
ex)
SELECT * FROM customer WHERE age&amp;gt;=20


Where를 사용할 때 기본적인 비교 연산자로는 =, &amp;lt;&amp;gt;, &amp;lt;, &amp;lt;=, &amp;gt;, &amp;gt;=이 있습니다


  
    
      연산자
      의미
    
  
  
    
      =
      같다
    
    
      &amp;lt;&amp;gt;
      같지않다
    
    
      &amp;gt;
      크다
    
    
      &amp;gt;=
 ...
    </summary>
  

  </entry>

  
  <entry>
    <title>SQL Grammer (Select, From)</title>
    <link href="http://localhost:4000/posts/SQL-Grammer-(Select,-From)/" rel="alternate" type="text/html" title="SQL Grammer (Select, From)" />
    <published>2024-03-11T00:00:00+09:00</published>
  
    <updated>2024-03-11T00:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/SQL-Grammer-(Select,-From)/</id>
    <content src="http://localhost:4000/posts/SQL-Grammer-(Select,-From)/" />
    <author>
      <name>jay</name>
    </author>

  
    
    <category term="MySQL" />
    
    <category term="SQL Grammer" />
    
  

  
    <summary>
      





      SQL Grammer (Select, From)

SQL 이란?

SQL은 Structured Query Language의 약자이며 직역하자면 구조화된 질의 언어 라는 의미입니다. 관계형 데이터베이스에서 데이터를 관리하고 처리하기 위해 사용되는 비절차적인 언어입니다.

SQL 문장에는 다음 3가지 종류가 있습니다.

  데이터 정의어(Data Definition Language)
  데이터 조작어(Data Manipulation Language)
  데이터 제어어(Data Control Language)



Select

Select는 SQL에서 가장 많이 사용되는 구문입니다. 데이터를 가져오는 기본 명령어로, 데이터를 조회하는 모든 Query에 사용됩니다. 단순하게 데이터베이스가 엑셀처럼 행과 열(...
    </summary>
  

  </entry>

  
  <entry>
    <title>SQL Grammer (SUM, AVG, COUNT, MIN, MAX)</title>
    <link href="http://localhost:4000/posts/SQL-Grammer-(SUM,-AVG,-COUNT,-MIN,-MAX)/" rel="alternate" type="text/html" title="SQL Grammer (SUM, AVG, COUNT, MIN, MAX)" />
    <published>2024-03-11T00:00:00+09:00</published>
  
    <updated>2024-03-11T00:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/SQL-Grammer-(SUM,-AVG,-COUNT,-MIN,-MAX)/</id>
    <content src="http://localhost:4000/posts/SQL-Grammer-(SUM,-AVG,-COUNT,-MIN,-MAX)/" />
    <author>
      <name>jay</name>
    </author>

  
    
    <category term="MySQL" />
    
    <category term="SQL Grammer" />
    
  

  
    <summary>
      





      SQL Grammer (SUM, AVG, COUNT, MIN, MAX)

SUM

선택된 열과 범위의 합계를 반환해줍니다. 예시처럼 customer의 테이블안에 있는 모든 값들의 나이를 더한 값을 얻고 싶을 때 쓸 수 있습니다.
ex)
SELECT SUM(age) FROM customers




AVG

sum과 같은 방법으로 사용 가능하며, 평균 값을 구할 때 사용합니다. customer 테이블 안의 age의 평균값을 구하고 싶다면 다음과 같이 사용할 수 있습니다.
SELECT AVG(age) FROM customers




COUNT

데이터의 개수를 구하는데 사용할 수 있습니다. ()안에 1이나 *을 입력하면 해당 테이블의 전체 카운트를 가져옵니다. distinct를 사용하면 중복되지 않는 값...
    </summary>
  

  </entry>

  
  <entry>
    <title>Basic70 수열과 구간 쿼리 1</title>
    <link href="http://localhost:4000/posts/ProgrammersBasic-70/" rel="alternate" type="text/html" title="Basic70 수열과 구간 쿼리 1" />
    <published>2024-02-07T00:00:00+09:00</published>
  
    <updated>2024-02-21T14:53:49+09:00</updated>
  
    <id>http://localhost:4000/posts/ProgrammersBasic-70/</id>
    <content src="http://localhost:4000/posts/ProgrammersBasic-70/" />
    <author>
      <name>jay</name>
    </author>

  
    
    <category term="Algorithm" />
    
    <category term="Programmers" />
    
    <category term="Basic" />
    
  

  
    <summary>
      





      문제: 수열과 구간 쿼리 1
문제: 수열과 구간 쿼리 1

문제 설명

정수 배열 arr와 2차원 정수 배열 queries이 주어집니다. queries의 원소는 각각 하나의 query를 나타내며, [s, e] 꼴입니다.

각 query마다 순서대로 s ≤ i ≤ e인 모든 i에 대해 arr[i]에 1을 더합니다.

위 규칙에 따라 queries를 처리한 이후의 arr를 return 하는 solution 함수를 완성해 주세요.



제한사항


  1 ≤ arr의 길이 ≤ 1,000
    
      0 ≤ arr의 원소 ≤ 1,000,000
    
  
  1 ≤ queries의 길이 ≤ 1,000
    
      0 ≤ s ≤ e &amp;lt; arr의 길이
    
  




입출력 예


  ...
    </summary>
  

  </entry>

  
  <entry>
    <title>Basic69 n 보다 커질 때까지 더하기</title>
    <link href="http://localhost:4000/posts/ProgrammersBasic-69/" rel="alternate" type="text/html" title="Basic69 n 보다 커질 때까지 더하기" />
    <published>2024-02-07T00:00:00+09:00</published>
  
    <updated>2024-02-07T00:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/ProgrammersBasic-69/</id>
    <content src="http://localhost:4000/posts/ProgrammersBasic-69/" />
    <author>
      <name>jay</name>
    </author>

  
    
    <category term="Algorithm" />
    
    <category term="Programmers" />
    
  

  
    <summary>
      





      문제: n 보다 커질 때까지 더하기

문제 설명

정수 배열 numbers와 정수 n이 매개변수로 주어집니다. numbers의 원소를 앞에서부터 하나씩 더하다가 그 합이 n보다 커지는 순간 이때까지 더했던 원소들의 합을 return 하는 solution 함수를 작성해 주세요.



제한사항


  1 ≤ numbers의 길이 ≤ 100
  1 ≤ numbers의 원소 ≤ 100
  0 ≤ n &amp;lt; numbers의 모든 원소의 합




입출력 예


  
    
      numbers
      n
      result
    
  
  
    
      [34, 5, 71, 29, 100, 34]
      123
      139
    
    
      [58, 44, 27, 10...
    </summary>
  

  </entry>

</feed>


