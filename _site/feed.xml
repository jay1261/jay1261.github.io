

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://localhost:4000/</id>
  <title>jay1261</title>
  <subtitle>개발 일지</subtitle>
  <updated>2024-03-12T23:34:35+09:00</updated>
  <author>
    <name>Dongjae Lee</name>
    <uri>http://localhost:4000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://localhost:4000/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="ko"
    href="http://localhost:4000/"/>
  <generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator>
  <rights> © 2024 Dongjae Lee </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>SQL Grammer (Replace, Substring, Concat)</title>
    <link href="http://localhost:4000/posts/SQL-Grammer-(Replace,-Substring,-Concat)/" rel="alternate" type="text/html" title="SQL Grammer (Replace, Substring, Concat)" />
    <published>2024-03-12T00:00:00+09:00</published>
  
    <updated>2024-03-12T00:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/SQL-Grammer-(Replace,-Substring,-Concat)/</id>
    <content src="http://localhost:4000/posts/SQL-Grammer-(Replace,-Substring,-Concat)/" />
    <author>
      <name>jay</name>
    </author>

  
    
    <category term="MySQL" />
    
    <category term="SQL Grammer" />
    
  

  
    <summary>
      





      SQL Grammer (Replace, Substring, Concat)

Replace

특정 문자를 변경하고자 할 때 사용합니다. Replace(바꿀컬럼, 현재 값, 바꿀 값) 의 형태로 사용할 수 있습니다.

ex)
SELECT restaurant_name AS "원래 이름",  
       REPLACE (restaurant_name, 'Blue', 'Pink')  
FROM food_orders  
WHERE restaurant_name LIKE '%Blue Ribbon%'


이렇게 하면 기존에 ‘Blue’ 였던 문자가 Pink로 바뀌게 됩니다.


  
    
      원래이름
      바뀐이름
    
    
      Blue Ribbon Sushi Izakaya
      P...
    </summary>
  

  </entry>

  
  <entry>
    <title>SQL Grammer (If, Case, Cast)</title>
    <link href="http://localhost:4000/posts/SQL-Grammer-(If,-Case,-Cast)/" rel="alternate" type="text/html" title="SQL Grammer (If, Case, Cast)" />
    <published>2024-03-12T00:00:00+09:00</published>
  
    <updated>2024-03-12T00:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/SQL-Grammer-(If,-Case,-Cast)/</id>
    <content src="http://localhost:4000/posts/SQL-Grammer-(If,-Case,-Cast)/" />
    <author>
      <name>jay</name>
    </author>

  
    
    <category term="MySQL" />
    
    <category term="SQL Grammer" />
    
  

  
    <summary>
      





      SQL Grammer (If, Case, Cast)


If


조건에 따라 다른 방법을 적용해 값을 얻고 싶을 때 If문을 사용합니다. if(조건, 참일 때 실행, 거짓일 때 실행)의 형태로 사용합니다. 음식의 타입이 “Korean”이면 한식, 아니면 기타를 출력하는 예시입니다.

select restaurant_name,  
       cuisine_type "원래 음식 타입",  
       if(cuisine_type='Korean', '한식', '기타') "음식 타입"  
from food_orders;



  
    
      Hangawi
      Korean
      한식
    
    
      Blue Ribbon Sushi Izakaya
      Japanese
...
    </summary>
  

  </entry>

  
  <entry>
    <title>SQL Grammer (Group By, Order By)</title>
    <link href="http://localhost:4000/posts/SQL-Grammer-(Group-By,-Order-By)/" rel="alternate" type="text/html" title="SQL Grammer (Group By, Order By)" />
    <published>2024-03-12T00:00:00+09:00</published>
  
    <updated>2024-03-12T00:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/SQL-Grammer-(Group-By,-Order-By)/</id>
    <content src="http://localhost:4000/posts/SQL-Grammer-(Group-By,-Order-By)/" />
    <author>
      <name>jay</name>
    </author>

  
    
    <category term="MySQL" />
    
    <category term="SQL Grammer" />
    
  

  
    <summary>
      





      SQL Grammer (Group By, Order By)

Group By

데이터를 범주별로 연산된 결과를 얻고 싶을 때 주로 사용합니다. Count, AVG, Sum등의 함수들과 주로 같이 사용되며, 예를들어 나라별 음식 판매의 합산 금액을 구하고 싶을때 사용할 수 있습니다.

ex)
select cuisine_type,
       sum(price) sum_of_price
from food_orders
group by cuisine_type



  출력



  
    
      cuisine_type
      sum_of_price
    
  
  
    
      Korean
      182020
    
    
      Japanese
      7663130
    
...
    </summary>
  

  </entry>

  
  <entry>
    <title>SQL Grammer (Where, Between, In, Like)</title>
    <link href="http://localhost:4000/posts/SQL-Grammer-(Where,-Between,-In,-Like)/" rel="alternate" type="text/html" title="SQL Grammer (Where, Between, In, Like)" />
    <published>2024-03-11T00:00:00+09:00</published>
  
    <updated>2024-03-11T00:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/SQL-Grammer-(Where,-Between,-In,-Like)/</id>
    <content src="http://localhost:4000/posts/SQL-Grammer-(Where,-Between,-In,-Like)/" />
    <author>
      <name>jay</name>
    </author>

  
    
    <category term="MySQL" />
    
    <category term="SQL Grammer" />
    
  

  
    <summary>
      





      SQL Grammer (Where, Between, In, Like)

Where

데이터 중에 특정 조건으로 필터링을 해야할 때 사용하는 문법입니다. “나이가 20살 이상인 사람”과 같은 경우의 데이터를 구할 때 사용합니다.
ex)
SELECT * FROM customer WHERE age&amp;gt;=20


Where를 사용할 때 기본적인 비교 연산자로는 =, &amp;lt;&amp;gt;, &amp;lt;, &amp;lt;=, &amp;gt;, &amp;gt;=이 있습니다


  
    
      연산자
      의미
    
  
  
    
      =
      같다
    
    
      &amp;lt;&amp;gt;
      같지않다
    
    
      &amp;gt;
      크다
    
    
      &amp;gt;=
 ...
    </summary>
  

  </entry>

  
  <entry>
    <title>SQL Grammer (Select, From)</title>
    <link href="http://localhost:4000/posts/SQL-Grammer-(Select,-From)/" rel="alternate" type="text/html" title="SQL Grammer (Select, From)" />
    <published>2024-03-11T00:00:00+09:00</published>
  
    <updated>2024-03-11T00:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/SQL-Grammer-(Select,-From)/</id>
    <content src="http://localhost:4000/posts/SQL-Grammer-(Select,-From)/" />
    <author>
      <name>jay</name>
    </author>

  
    
    <category term="MySQL" />
    
    <category term="SQL Grammer" />
    
  

  
    <summary>
      





      SQL Grammer (Select, From)

SQL 이란?

SQL은 Structured Query Language의 약자이며 직역하자면 구조화된 질의 언어 라는 의미입니다. 관계형 데이터베이스에서 데이터를 관리하고 처리하기 위해 사용되는 비절차적인 언어입니다.

SQL 문장에는 다음 3가지 종류가 있습니다.

  데이터 정의어(Data Definition Language)
  데이터 조작어(Data Manipulation Language)
  데이터 제어어(Data Control Language)



Select

Select는 SQL에서 가장 많이 사용되는 구문입니다. 데이터를 가져오는 기본 명령어로, 데이터를 조회하는 모든 Query에 사용됩니다. 단순하게 데이터베이스가 엑셀처럼 행과 열(...
    </summary>
  

  </entry>

</feed>


